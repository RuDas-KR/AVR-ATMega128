
usart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  000017a6  0000181a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000160  00000000  00000000  00001832  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 000001bd  00000000  00000000  00001992  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00002036  00000000  00000000  00001b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00001028  00000000  00000000  00003b85  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001322  00000000  00000000  00004bad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001b0  00000000  00000000  00005ed0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000340  00000000  00000000  00006080  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000007ce  00000000  00000000  000063c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00006b8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e6 ea       	ldi	r30, 0xA6	; 166
      a0:	f7 e1       	ldi	r31, 0x17	; 23
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a8 31       	cpi	r26, 0x18	; 24
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
      b2:	0e 94 bf 00 	call	0x17e	; 0x17e <main>
      b6:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <_exit>

000000ba <__bad_interrupt>:
      ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <USART_init>:
#define USART0 0
#define USART1 1


void USART_init(unsigned char ch, unsigned int ubrr_baud)
{
      be:	df 93       	push	r29
      c0:	cf 93       	push	r28
      c2:	00 d0       	rcall	.+0      	; 0xc4 <USART_init+0x6>
      c4:	0f 92       	push	r0
      c6:	cd b7       	in	r28, 0x3d	; 61
      c8:	de b7       	in	r29, 0x3e	; 62
      ca:	89 83       	std	Y+1, r24	; 0x01
      cc:	7b 83       	std	Y+3, r23	; 0x03
      ce:	6a 83       	std	Y+2, r22	; 0x02
	if (ch == USART0) {
      d0:	89 81       	ldd	r24, Y+1	; 0x01
      d2:	88 23       	and	r24, r24
      d4:	99 f4       	brne	.+38     	; 0xfc <USART_init+0x3e>
		UCSR0B |= 1 << RXEN0 | 1 << TXEN0;
      d6:	aa e2       	ldi	r26, 0x2A	; 42
      d8:	b0 e0       	ldi	r27, 0x00	; 0
      da:	ea e2       	ldi	r30, 0x2A	; 42
      dc:	f0 e0       	ldi	r31, 0x00	; 0
      de:	80 81       	ld	r24, Z
      e0:	88 61       	ori	r24, 0x18	; 24
      e2:	8c 93       	st	X, r24
		UBRR0H = ubrr_baud >> 8;
      e4:	e0 e9       	ldi	r30, 0x90	; 144
      e6:	f0 e0       	ldi	r31, 0x00	; 0
      e8:	8a 81       	ldd	r24, Y+2	; 0x02
      ea:	9b 81       	ldd	r25, Y+3	; 0x03
      ec:	89 2f       	mov	r24, r25
      ee:	99 27       	eor	r25, r25
      f0:	80 83       	st	Z, r24
		UBRR0L = ubrr_baud;
      f2:	e9 e2       	ldi	r30, 0x29	; 41
      f4:	f0 e0       	ldi	r31, 0x00	; 0
      f6:	8a 81       	ldd	r24, Y+2	; 0x02
      f8:	80 83       	st	Z, r24
      fa:	15 c0       	rjmp	.+42     	; 0x126 <USART_init+0x68>
		}

	else if (ch == USART1){
      fc:	89 81       	ldd	r24, Y+1	; 0x01
      fe:	81 30       	cpi	r24, 0x01	; 1
     100:	91 f4       	brne	.+36     	; 0x126 <USART_init+0x68>
		UCSR1B |= 1 << RXEN1 | 1 << TXEN1;
     102:	aa e9       	ldi	r26, 0x9A	; 154
     104:	b0 e0       	ldi	r27, 0x00	; 0
     106:	ea e9       	ldi	r30, 0x9A	; 154
     108:	f0 e0       	ldi	r31, 0x00	; 0
     10a:	80 81       	ld	r24, Z
     10c:	88 61       	ori	r24, 0x18	; 24
     10e:	8c 93       	st	X, r24
		UBRR1H = ubrr_baud >> 8;
     110:	e8 e9       	ldi	r30, 0x98	; 152
     112:	f0 e0       	ldi	r31, 0x00	; 0
     114:	8a 81       	ldd	r24, Y+2	; 0x02
     116:	9b 81       	ldd	r25, Y+3	; 0x03
     118:	89 2f       	mov	r24, r25
     11a:	99 27       	eor	r25, r25
     11c:	80 83       	st	Z, r24
		UBRR1L = ubrr_baud;
     11e:	e9 e9       	ldi	r30, 0x99	; 153
     120:	f0 e0       	ldi	r31, 0x00	; 0
     122:	8a 81       	ldd	r24, Y+2	; 0x02
     124:	80 83       	st	Z, r24
		}
}
     126:	0f 90       	pop	r0
     128:	0f 90       	pop	r0
     12a:	0f 90       	pop	r0
     12c:	cf 91       	pop	r28
     12e:	df 91       	pop	r29
     130:	08 95       	ret

00000132 <USART0_send>:

void USART0_send(char data){
     132:	df 93       	push	r29
     134:	cf 93       	push	r28
     136:	0f 92       	push	r0
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
     13c:	89 83       	std	Y+1, r24	; 0x01
	while (!(UCSR0A & (1 << UDRE0)) );
     13e:	eb e2       	ldi	r30, 0x2B	; 43
     140:	f0 e0       	ldi	r31, 0x00	; 0
     142:	80 81       	ld	r24, Z
     144:	88 2f       	mov	r24, r24
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	80 72       	andi	r24, 0x20	; 32
     14a:	90 70       	andi	r25, 0x00	; 0
     14c:	00 97       	sbiw	r24, 0x00	; 0
     14e:	b9 f3       	breq	.-18     	; 0x13e <USART0_send+0xc>
	UDR0 = data;
     150:	ec e2       	ldi	r30, 0x2C	; 44
     152:	f0 e0       	ldi	r31, 0x00	; 0
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	80 83       	st	Z, r24
}
     158:	0f 90       	pop	r0
     15a:	cf 91       	pop	r28
     15c:	df 91       	pop	r29
     15e:	08 95       	ret

00000160 <USART0_receive>:


char USART0_receive(){
     160:	df 93       	push	r29
     162:	cf 93       	push	r28
     164:	cd b7       	in	r28, 0x3d	; 61
     166:	de b7       	in	r29, 0x3e	; 62
	while (!(UCSR0A & (1 << RXC0)) );
     168:	eb e2       	ldi	r30, 0x2B	; 43
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	88 23       	and	r24, r24
     170:	dc f7       	brge	.-10     	; 0x168 <USART0_receive+0x8>
	return UDR0;
     172:	ec e2       	ldi	r30, 0x2C	; 44
     174:	f0 e0       	ldi	r31, 0x00	; 0
     176:	80 81       	ld	r24, Z
}
     178:	cf 91       	pop	r28
     17a:	df 91       	pop	r29
     17c:	08 95       	ret

0000017e <main>:

int main() {
     17e:	0f 93       	push	r16
     180:	1f 93       	push	r17
     182:	df 93       	push	r29
     184:	cf 93       	push	r28
     186:	cd b7       	in	r28, 0x3d	; 61
     188:	de b7       	in	r29, 0x3e	; 62
     18a:	c6 58       	subi	r28, 0x86	; 134
     18c:	d0 40       	sbci	r29, 0x00	; 0
     18e:	0f b6       	in	r0, 0x3f	; 63
     190:	f8 94       	cli
     192:	de bf       	out	0x3e, r29	; 62
     194:	0f be       	out	0x3f, r0	; 63
     196:	cd bf       	out	0x3d, r28	; 61
	USART_init(0,8);
     198:	80 e0       	ldi	r24, 0x00	; 0
     19a:	68 e0       	ldi	r22, 0x08	; 8
     19c:	70 e0       	ldi	r23, 0x00	; 0
     19e:	0e 94 5f 00 	call	0xbe	; 0xbe <USART_init>
	DDRA=0xFF;
     1a2:	ea e3       	ldi	r30, 0x3A	; 58
     1a4:	f0 e0       	ldi	r31, 0x00	; 0
     1a6:	8f ef       	ldi	r24, 0xFF	; 255
     1a8:	80 83       	st	Z, r24

	unsigned char text[]="Start USART \r\n";
     1aa:	ce 01       	movw	r24, r28
     1ac:	8d 58       	subi	r24, 0x8D	; 141
     1ae:	9f 4f       	sbci	r25, 0xFF	; 255
     1b0:	ce 57       	subi	r28, 0x7E	; 126
     1b2:	df 4f       	sbci	r29, 0xFF	; 255
     1b4:	99 83       	std	Y+1, r25	; 0x01
     1b6:	88 83       	st	Y, r24
     1b8:	c2 58       	subi	r28, 0x82	; 130
     1ba:	d0 40       	sbci	r29, 0x00	; 0
     1bc:	80 e0       	ldi	r24, 0x00	; 0
     1be:	91 e0       	ldi	r25, 0x01	; 1
     1c0:	cc 57       	subi	r28, 0x7C	; 124
     1c2:	df 4f       	sbci	r29, 0xFF	; 255
     1c4:	99 83       	std	Y+1, r25	; 0x01
     1c6:	88 83       	st	Y, r24
     1c8:	c4 58       	subi	r28, 0x84	; 132
     1ca:	d0 40       	sbci	r29, 0x00	; 0
     1cc:	9f e0       	ldi	r25, 0x0F	; 15
     1ce:	ca 57       	subi	r28, 0x7A	; 122
     1d0:	df 4f       	sbci	r29, 0xFF	; 255
     1d2:	98 83       	st	Y, r25
     1d4:	c6 58       	subi	r28, 0x86	; 134
     1d6:	d0 40       	sbci	r29, 0x00	; 0
     1d8:	cc 57       	subi	r28, 0x7C	; 124
     1da:	df 4f       	sbci	r29, 0xFF	; 255
     1dc:	e8 81       	ld	r30, Y
     1de:	f9 81       	ldd	r31, Y+1	; 0x01
     1e0:	c4 58       	subi	r28, 0x84	; 132
     1e2:	d0 40       	sbci	r29, 0x00	; 0
     1e4:	00 80       	ld	r0, Z
     1e6:	cc 57       	subi	r28, 0x7C	; 124
     1e8:	df 4f       	sbci	r29, 0xFF	; 255
     1ea:	88 81       	ld	r24, Y
     1ec:	99 81       	ldd	r25, Y+1	; 0x01
     1ee:	c4 58       	subi	r28, 0x84	; 132
     1f0:	d0 40       	sbci	r29, 0x00	; 0
     1f2:	01 96       	adiw	r24, 0x01	; 1
     1f4:	cc 57       	subi	r28, 0x7C	; 124
     1f6:	df 4f       	sbci	r29, 0xFF	; 255
     1f8:	99 83       	std	Y+1, r25	; 0x01
     1fa:	88 83       	st	Y, r24
     1fc:	c4 58       	subi	r28, 0x84	; 132
     1fe:	d0 40       	sbci	r29, 0x00	; 0
     200:	ce 57       	subi	r28, 0x7E	; 126
     202:	df 4f       	sbci	r29, 0xFF	; 255
     204:	e8 81       	ld	r30, Y
     206:	f9 81       	ldd	r31, Y+1	; 0x01
     208:	c2 58       	subi	r28, 0x82	; 130
     20a:	d0 40       	sbci	r29, 0x00	; 0
     20c:	00 82       	st	Z, r0
     20e:	ce 57       	subi	r28, 0x7E	; 126
     210:	df 4f       	sbci	r29, 0xFF	; 255
     212:	88 81       	ld	r24, Y
     214:	99 81       	ldd	r25, Y+1	; 0x01
     216:	c2 58       	subi	r28, 0x82	; 130
     218:	d0 40       	sbci	r29, 0x00	; 0
     21a:	01 96       	adiw	r24, 0x01	; 1
     21c:	ce 57       	subi	r28, 0x7E	; 126
     21e:	df 4f       	sbci	r29, 0xFF	; 255
     220:	99 83       	std	Y+1, r25	; 0x01
     222:	88 83       	st	Y, r24
     224:	c2 58       	subi	r28, 0x82	; 130
     226:	d0 40       	sbci	r29, 0x00	; 0
     228:	ca 57       	subi	r28, 0x7A	; 122
     22a:	df 4f       	sbci	r29, 0xFF	; 255
     22c:	98 81       	ld	r25, Y
     22e:	c6 58       	subi	r28, 0x86	; 134
     230:	d0 40       	sbci	r29, 0x00	; 0
     232:	91 50       	subi	r25, 0x01	; 1
     234:	ca 57       	subi	r28, 0x7A	; 122
     236:	df 4f       	sbci	r29, 0xFF	; 255
     238:	98 83       	st	Y, r25
     23a:	c6 58       	subi	r28, 0x86	; 134
     23c:	d0 40       	sbci	r29, 0x00	; 0
     23e:	ca 57       	subi	r28, 0x7A	; 122
     240:	df 4f       	sbci	r29, 0xFF	; 255
     242:	e8 81       	ld	r30, Y
     244:	c6 58       	subi	r28, 0x86	; 134
     246:	d0 40       	sbci	r29, 0x00	; 0
     248:	ee 23       	and	r30, r30
     24a:	31 f6       	brne	.-116    	; 0x1d8 <main+0x5a>
	unsigned char i=0;
     24c:	fe 01       	movw	r30, r28
     24e:	ee 58       	subi	r30, 0x8E	; 142
     250:	ff 4f       	sbci	r31, 0xFF	; 255
     252:	10 82       	st	Z, r1
     254:	19 c0       	rjmp	.+50     	; 0x288 <main+0x10a>
	unsigned char str;

	while(text[i] != '\0') {
		USART0_send(text[i++]);
     256:	fe 01       	movw	r30, r28
     258:	ee 58       	subi	r30, 0x8E	; 142
     25a:	ff 4f       	sbci	r31, 0xFF	; 255
     25c:	80 81       	ld	r24, Z
     25e:	28 2f       	mov	r18, r24
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	ce 01       	movw	r24, r28
     264:	8d 58       	subi	r24, 0x8D	; 141
     266:	9f 4f       	sbci	r25, 0xFF	; 255
     268:	fc 01       	movw	r30, r24
     26a:	e2 0f       	add	r30, r18
     26c:	f3 1f       	adc	r31, r19
     26e:	90 81       	ld	r25, Z
     270:	de 01       	movw	r26, r28
     272:	ae 58       	subi	r26, 0x8E	; 142
     274:	bf 4f       	sbci	r27, 0xFF	; 255
     276:	fe 01       	movw	r30, r28
     278:	ee 58       	subi	r30, 0x8E	; 142
     27a:	ff 4f       	sbci	r31, 0xFF	; 255
     27c:	80 81       	ld	r24, Z
     27e:	8f 5f       	subi	r24, 0xFF	; 255
     280:	8c 93       	st	X, r24
     282:	89 2f       	mov	r24, r25
     284:	0e 94 99 00 	call	0x132	; 0x132 <USART0_send>

	unsigned char text[]="Start USART \r\n";
	unsigned char i=0;
	unsigned char str;

	while(text[i] != '\0') {
     288:	fe 01       	movw	r30, r28
     28a:	ee 58       	subi	r30, 0x8E	; 142
     28c:	ff 4f       	sbci	r31, 0xFF	; 255
     28e:	80 81       	ld	r24, Z
     290:	28 2f       	mov	r18, r24
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	ce 01       	movw	r24, r28
     296:	8d 58       	subi	r24, 0x8D	; 141
     298:	9f 4f       	sbci	r25, 0xFF	; 255
     29a:	fc 01       	movw	r30, r24
     29c:	e2 0f       	add	r30, r18
     29e:	f3 1f       	adc	r31, r19
     2a0:	80 81       	ld	r24, Z
     2a2:	88 23       	and	r24, r24
     2a4:	c1 f6       	brne	.-80     	; 0x256 <main+0xd8>
		USART0_send(text[i++]);
	}

	while(1) {
		str=USART0_receive();
     2a6:	0e 94 b0 00 	call	0x160	; 0x160 <USART0_receive>
     2aa:	fe 01       	movw	r30, r28
     2ac:	ef 58       	subi	r30, 0x8F	; 143
     2ae:	ff 4f       	sbci	r31, 0xFF	; 255
     2b0:	80 83       	st	Z, r24
		USART0_send(str);
     2b2:	fe 01       	movw	r30, r28
     2b4:	ef 58       	subi	r30, 0x8F	; 143
     2b6:	ff 4f       	sbci	r31, 0xFF	; 255
     2b8:	80 81       	ld	r24, Z
     2ba:	0e 94 99 00 	call	0x132	; 0x132 <USART0_send>
	
		if(str=='1') {
     2be:	fe 01       	movw	r30, r28
     2c0:	ef 58       	subi	r30, 0x8F	; 143
     2c2:	ff 4f       	sbci	r31, 0xFF	; 255
     2c4:	80 81       	ld	r24, Z
     2c6:	81 33       	cpi	r24, 0x31	; 49
     2c8:	09 f0       	breq	.+2      	; 0x2cc <main+0x14e>
     2ca:	bc c0       	rjmp	.+376    	; 0x444 <main+0x2c6>
			PORTA=0x80;
     2cc:	eb e3       	ldi	r30, 0x3B	; 59
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	80 e8       	ldi	r24, 0x80	; 128
     2d2:	80 83       	st	Z, r24
     2d4:	fe 01       	movw	r30, r28
     2d6:	e3 59       	subi	r30, 0x93	; 147
     2d8:	ff 4f       	sbci	r31, 0xFF	; 255
     2da:	80 e0       	ldi	r24, 0x00	; 0
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	aa ef       	ldi	r26, 0xFA	; 250
     2e0:	b3 e4       	ldi	r27, 0x43	; 67
     2e2:	80 83       	st	Z, r24
     2e4:	91 83       	std	Z+1, r25	; 0x01
     2e6:	a2 83       	std	Z+2, r26	; 0x02
     2e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2ea:	8e 01       	movw	r16, r28
     2ec:	07 59       	subi	r16, 0x97	; 151
     2ee:	1f 4f       	sbci	r17, 0xFF	; 255
     2f0:	fe 01       	movw	r30, r28
     2f2:	e3 59       	subi	r30, 0x93	; 147
     2f4:	ff 4f       	sbci	r31, 0xFF	; 255
     2f6:	60 81       	ld	r22, Z
     2f8:	71 81       	ldd	r23, Z+1	; 0x01
     2fa:	82 81       	ldd	r24, Z+2	; 0x02
     2fc:	93 81       	ldd	r25, Z+3	; 0x03
     2fe:	26 e6       	ldi	r18, 0x66	; 102
     300:	36 e6       	ldi	r19, 0x66	; 102
     302:	46 ee       	ldi	r20, 0xE6	; 230
     304:	54 e4       	ldi	r21, 0x44	; 68
     306:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     30a:	dc 01       	movw	r26, r24
     30c:	cb 01       	movw	r24, r22
     30e:	f8 01       	movw	r30, r16
     310:	80 83       	st	Z, r24
     312:	91 83       	std	Z+1, r25	; 0x01
     314:	a2 83       	std	Z+2, r26	; 0x02
     316:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     318:	fe 01       	movw	r30, r28
     31a:	e7 59       	subi	r30, 0x97	; 151
     31c:	ff 4f       	sbci	r31, 0xFF	; 255
     31e:	60 81       	ld	r22, Z
     320:	71 81       	ldd	r23, Z+1	; 0x01
     322:	82 81       	ldd	r24, Z+2	; 0x02
     324:	93 81       	ldd	r25, Z+3	; 0x03
     326:	20 e0       	ldi	r18, 0x00	; 0
     328:	30 e0       	ldi	r19, 0x00	; 0
     32a:	40 e8       	ldi	r20, 0x80	; 128
     32c:	5f e3       	ldi	r21, 0x3F	; 63
     32e:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     332:	88 23       	and	r24, r24
     334:	44 f4       	brge	.+16     	; 0x346 <main+0x1c8>
		__ticks = 1;
     336:	fe 01       	movw	r30, r28
     338:	e9 59       	subi	r30, 0x99	; 153
     33a:	ff 4f       	sbci	r31, 0xFF	; 255
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	91 83       	std	Z+1, r25	; 0x01
     342:	80 83       	st	Z, r24
     344:	64 c0       	rjmp	.+200    	; 0x40e <main+0x290>
	else if (__tmp > 65535)
     346:	fe 01       	movw	r30, r28
     348:	e7 59       	subi	r30, 0x97	; 151
     34a:	ff 4f       	sbci	r31, 0xFF	; 255
     34c:	60 81       	ld	r22, Z
     34e:	71 81       	ldd	r23, Z+1	; 0x01
     350:	82 81       	ldd	r24, Z+2	; 0x02
     352:	93 81       	ldd	r25, Z+3	; 0x03
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	3f ef       	ldi	r19, 0xFF	; 255
     358:	4f e7       	ldi	r20, 0x7F	; 127
     35a:	57 e4       	ldi	r21, 0x47	; 71
     35c:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     360:	18 16       	cp	r1, r24
     362:	0c f0       	brlt	.+2      	; 0x366 <main+0x1e8>
     364:	43 c0       	rjmp	.+134    	; 0x3ec <main+0x26e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     366:	fe 01       	movw	r30, r28
     368:	e3 59       	subi	r30, 0x93	; 147
     36a:	ff 4f       	sbci	r31, 0xFF	; 255
     36c:	60 81       	ld	r22, Z
     36e:	71 81       	ldd	r23, Z+1	; 0x01
     370:	82 81       	ldd	r24, Z+2	; 0x02
     372:	93 81       	ldd	r25, Z+3	; 0x03
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	40 e2       	ldi	r20, 0x20	; 32
     37a:	51 e4       	ldi	r21, 0x41	; 65
     37c:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     380:	dc 01       	movw	r26, r24
     382:	cb 01       	movw	r24, r22
     384:	8e 01       	movw	r16, r28
     386:	09 59       	subi	r16, 0x99	; 153
     388:	1f 4f       	sbci	r17, 0xFF	; 255
     38a:	bc 01       	movw	r22, r24
     38c:	cd 01       	movw	r24, r26
     38e:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	f8 01       	movw	r30, r16
     398:	91 83       	std	Z+1, r25	; 0x01
     39a:	80 83       	st	Z, r24
     39c:	1f c0       	rjmp	.+62     	; 0x3dc <main+0x25e>
     39e:	fe 01       	movw	r30, r28
     3a0:	eb 59       	subi	r30, 0x9B	; 155
     3a2:	ff 4f       	sbci	r31, 0xFF	; 255
     3a4:	88 eb       	ldi	r24, 0xB8	; 184
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	91 83       	std	Z+1, r25	; 0x01
     3aa:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3ac:	fe 01       	movw	r30, r28
     3ae:	eb 59       	subi	r30, 0x9B	; 155
     3b0:	ff 4f       	sbci	r31, 0xFF	; 255
     3b2:	80 81       	ld	r24, Z
     3b4:	91 81       	ldd	r25, Z+1	; 0x01
     3b6:	01 97       	sbiw	r24, 0x01	; 1
     3b8:	f1 f7       	brne	.-4      	; 0x3b6 <main+0x238>
     3ba:	fe 01       	movw	r30, r28
     3bc:	eb 59       	subi	r30, 0x9B	; 155
     3be:	ff 4f       	sbci	r31, 0xFF	; 255
     3c0:	91 83       	std	Z+1, r25	; 0x01
     3c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3c4:	de 01       	movw	r26, r28
     3c6:	a9 59       	subi	r26, 0x99	; 153
     3c8:	bf 4f       	sbci	r27, 0xFF	; 255
     3ca:	fe 01       	movw	r30, r28
     3cc:	e9 59       	subi	r30, 0x99	; 153
     3ce:	ff 4f       	sbci	r31, 0xFF	; 255
     3d0:	80 81       	ld	r24, Z
     3d2:	91 81       	ldd	r25, Z+1	; 0x01
     3d4:	01 97       	sbiw	r24, 0x01	; 1
     3d6:	11 96       	adiw	r26, 0x01	; 1
     3d8:	9c 93       	st	X, r25
     3da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3dc:	fe 01       	movw	r30, r28
     3de:	e9 59       	subi	r30, 0x99	; 153
     3e0:	ff 4f       	sbci	r31, 0xFF	; 255
     3e2:	80 81       	ld	r24, Z
     3e4:	91 81       	ldd	r25, Z+1	; 0x01
     3e6:	00 97       	sbiw	r24, 0x00	; 0
     3e8:	d1 f6       	brne	.-76     	; 0x39e <main+0x220>
     3ea:	28 c0       	rjmp	.+80     	; 0x43c <main+0x2be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ec:	8e 01       	movw	r16, r28
     3ee:	09 59       	subi	r16, 0x99	; 153
     3f0:	1f 4f       	sbci	r17, 0xFF	; 255
     3f2:	fe 01       	movw	r30, r28
     3f4:	e7 59       	subi	r30, 0x97	; 151
     3f6:	ff 4f       	sbci	r31, 0xFF	; 255
     3f8:	60 81       	ld	r22, Z
     3fa:	71 81       	ldd	r23, Z+1	; 0x01
     3fc:	82 81       	ldd	r24, Z+2	; 0x02
     3fe:	93 81       	ldd	r25, Z+3	; 0x03
     400:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     404:	dc 01       	movw	r26, r24
     406:	cb 01       	movw	r24, r22
     408:	f8 01       	movw	r30, r16
     40a:	91 83       	std	Z+1, r25	; 0x01
     40c:	80 83       	st	Z, r24
     40e:	de 01       	movw	r26, r28
     410:	ad 59       	subi	r26, 0x9D	; 157
     412:	bf 4f       	sbci	r27, 0xFF	; 255
     414:	fe 01       	movw	r30, r28
     416:	e9 59       	subi	r30, 0x99	; 153
     418:	ff 4f       	sbci	r31, 0xFF	; 255
     41a:	80 81       	ld	r24, Z
     41c:	91 81       	ldd	r25, Z+1	; 0x01
     41e:	11 96       	adiw	r26, 0x01	; 1
     420:	9c 93       	st	X, r25
     422:	8e 93       	st	-X, r24
     424:	fe 01       	movw	r30, r28
     426:	ed 59       	subi	r30, 0x9D	; 157
     428:	ff 4f       	sbci	r31, 0xFF	; 255
     42a:	80 81       	ld	r24, Z
     42c:	91 81       	ldd	r25, Z+1	; 0x01
     42e:	01 97       	sbiw	r24, 0x01	; 1
     430:	f1 f7       	brne	.-4      	; 0x42e <main+0x2b0>
     432:	fe 01       	movw	r30, r28
     434:	ed 59       	subi	r30, 0x9D	; 157
     436:	ff 4f       	sbci	r31, 0xFF	; 255
     438:	91 83       	std	Z+1, r25	; 0x01
     43a:	80 83       	st	Z, r24
			_delay_ms(500);
			PORTA=0x00;
     43c:	eb e3       	ldi	r30, 0x3B	; 59
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	10 82       	st	Z, r1
     442:	31 cf       	rjmp	.-414    	; 0x2a6 <main+0x128>
		}
		else if(str=='2') {
     444:	fe 01       	movw	r30, r28
     446:	ef 58       	subi	r30, 0x8F	; 143
     448:	ff 4f       	sbci	r31, 0xFF	; 255
     44a:	80 81       	ld	r24, Z
     44c:	82 33       	cpi	r24, 0x32	; 50
     44e:	09 f0       	breq	.+2      	; 0x452 <main+0x2d4>
     450:	bc c0       	rjmp	.+376    	; 0x5ca <main+0x44c>
			PORTA=0x40;
     452:	eb e3       	ldi	r30, 0x3B	; 59
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 e4       	ldi	r24, 0x40	; 64
     458:	80 83       	st	Z, r24
     45a:	fe 01       	movw	r30, r28
     45c:	e1 5a       	subi	r30, 0xA1	; 161
     45e:	ff 4f       	sbci	r31, 0xFF	; 255
     460:	80 e0       	ldi	r24, 0x00	; 0
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	aa ef       	ldi	r26, 0xFA	; 250
     466:	b3 e4       	ldi	r27, 0x43	; 67
     468:	80 83       	st	Z, r24
     46a:	91 83       	std	Z+1, r25	; 0x01
     46c:	a2 83       	std	Z+2, r26	; 0x02
     46e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     470:	8e 01       	movw	r16, r28
     472:	05 5a       	subi	r16, 0xA5	; 165
     474:	1f 4f       	sbci	r17, 0xFF	; 255
     476:	fe 01       	movw	r30, r28
     478:	e1 5a       	subi	r30, 0xA1	; 161
     47a:	ff 4f       	sbci	r31, 0xFF	; 255
     47c:	60 81       	ld	r22, Z
     47e:	71 81       	ldd	r23, Z+1	; 0x01
     480:	82 81       	ldd	r24, Z+2	; 0x02
     482:	93 81       	ldd	r25, Z+3	; 0x03
     484:	26 e6       	ldi	r18, 0x66	; 102
     486:	36 e6       	ldi	r19, 0x66	; 102
     488:	46 ee       	ldi	r20, 0xE6	; 230
     48a:	54 e4       	ldi	r21, 0x44	; 68
     48c:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     490:	dc 01       	movw	r26, r24
     492:	cb 01       	movw	r24, r22
     494:	f8 01       	movw	r30, r16
     496:	80 83       	st	Z, r24
     498:	91 83       	std	Z+1, r25	; 0x01
     49a:	a2 83       	std	Z+2, r26	; 0x02
     49c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     49e:	fe 01       	movw	r30, r28
     4a0:	e5 5a       	subi	r30, 0xA5	; 165
     4a2:	ff 4f       	sbci	r31, 0xFF	; 255
     4a4:	60 81       	ld	r22, Z
     4a6:	71 81       	ldd	r23, Z+1	; 0x01
     4a8:	82 81       	ldd	r24, Z+2	; 0x02
     4aa:	93 81       	ldd	r25, Z+3	; 0x03
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	40 e8       	ldi	r20, 0x80	; 128
     4b2:	5f e3       	ldi	r21, 0x3F	; 63
     4b4:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     4b8:	88 23       	and	r24, r24
     4ba:	44 f4       	brge	.+16     	; 0x4cc <main+0x34e>
		__ticks = 1;
     4bc:	fe 01       	movw	r30, r28
     4be:	e7 5a       	subi	r30, 0xA7	; 167
     4c0:	ff 4f       	sbci	r31, 0xFF	; 255
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	91 83       	std	Z+1, r25	; 0x01
     4c8:	80 83       	st	Z, r24
     4ca:	64 c0       	rjmp	.+200    	; 0x594 <main+0x416>
	else if (__tmp > 65535)
     4cc:	fe 01       	movw	r30, r28
     4ce:	e5 5a       	subi	r30, 0xA5	; 165
     4d0:	ff 4f       	sbci	r31, 0xFF	; 255
     4d2:	60 81       	ld	r22, Z
     4d4:	71 81       	ldd	r23, Z+1	; 0x01
     4d6:	82 81       	ldd	r24, Z+2	; 0x02
     4d8:	93 81       	ldd	r25, Z+3	; 0x03
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	3f ef       	ldi	r19, 0xFF	; 255
     4de:	4f e7       	ldi	r20, 0x7F	; 127
     4e0:	57 e4       	ldi	r21, 0x47	; 71
     4e2:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     4e6:	18 16       	cp	r1, r24
     4e8:	0c f0       	brlt	.+2      	; 0x4ec <main+0x36e>
     4ea:	43 c0       	rjmp	.+134    	; 0x572 <main+0x3f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4ec:	fe 01       	movw	r30, r28
     4ee:	e1 5a       	subi	r30, 0xA1	; 161
     4f0:	ff 4f       	sbci	r31, 0xFF	; 255
     4f2:	60 81       	ld	r22, Z
     4f4:	71 81       	ldd	r23, Z+1	; 0x01
     4f6:	82 81       	ldd	r24, Z+2	; 0x02
     4f8:	93 81       	ldd	r25, Z+3	; 0x03
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e2       	ldi	r20, 0x20	; 32
     500:	51 e4       	ldi	r21, 0x41	; 65
     502:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     506:	dc 01       	movw	r26, r24
     508:	cb 01       	movw	r24, r22
     50a:	8e 01       	movw	r16, r28
     50c:	07 5a       	subi	r16, 0xA7	; 167
     50e:	1f 4f       	sbci	r17, 0xFF	; 255
     510:	bc 01       	movw	r22, r24
     512:	cd 01       	movw	r24, r26
     514:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     518:	dc 01       	movw	r26, r24
     51a:	cb 01       	movw	r24, r22
     51c:	f8 01       	movw	r30, r16
     51e:	91 83       	std	Z+1, r25	; 0x01
     520:	80 83       	st	Z, r24
     522:	1f c0       	rjmp	.+62     	; 0x562 <main+0x3e4>
     524:	fe 01       	movw	r30, r28
     526:	e9 5a       	subi	r30, 0xA9	; 169
     528:	ff 4f       	sbci	r31, 0xFF	; 255
     52a:	88 eb       	ldi	r24, 0xB8	; 184
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	91 83       	std	Z+1, r25	; 0x01
     530:	80 83       	st	Z, r24
     532:	fe 01       	movw	r30, r28
     534:	e9 5a       	subi	r30, 0xA9	; 169
     536:	ff 4f       	sbci	r31, 0xFF	; 255
     538:	80 81       	ld	r24, Z
     53a:	91 81       	ldd	r25, Z+1	; 0x01
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	f1 f7       	brne	.-4      	; 0x53c <main+0x3be>
     540:	fe 01       	movw	r30, r28
     542:	e9 5a       	subi	r30, 0xA9	; 169
     544:	ff 4f       	sbci	r31, 0xFF	; 255
     546:	91 83       	std	Z+1, r25	; 0x01
     548:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     54a:	de 01       	movw	r26, r28
     54c:	a7 5a       	subi	r26, 0xA7	; 167
     54e:	bf 4f       	sbci	r27, 0xFF	; 255
     550:	fe 01       	movw	r30, r28
     552:	e7 5a       	subi	r30, 0xA7	; 167
     554:	ff 4f       	sbci	r31, 0xFF	; 255
     556:	80 81       	ld	r24, Z
     558:	91 81       	ldd	r25, Z+1	; 0x01
     55a:	01 97       	sbiw	r24, 0x01	; 1
     55c:	11 96       	adiw	r26, 0x01	; 1
     55e:	9c 93       	st	X, r25
     560:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     562:	fe 01       	movw	r30, r28
     564:	e7 5a       	subi	r30, 0xA7	; 167
     566:	ff 4f       	sbci	r31, 0xFF	; 255
     568:	80 81       	ld	r24, Z
     56a:	91 81       	ldd	r25, Z+1	; 0x01
     56c:	00 97       	sbiw	r24, 0x00	; 0
     56e:	d1 f6       	brne	.-76     	; 0x524 <main+0x3a6>
     570:	28 c0       	rjmp	.+80     	; 0x5c2 <main+0x444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     572:	8e 01       	movw	r16, r28
     574:	07 5a       	subi	r16, 0xA7	; 167
     576:	1f 4f       	sbci	r17, 0xFF	; 255
     578:	fe 01       	movw	r30, r28
     57a:	e5 5a       	subi	r30, 0xA5	; 165
     57c:	ff 4f       	sbci	r31, 0xFF	; 255
     57e:	60 81       	ld	r22, Z
     580:	71 81       	ldd	r23, Z+1	; 0x01
     582:	82 81       	ldd	r24, Z+2	; 0x02
     584:	93 81       	ldd	r25, Z+3	; 0x03
     586:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     58a:	dc 01       	movw	r26, r24
     58c:	cb 01       	movw	r24, r22
     58e:	f8 01       	movw	r30, r16
     590:	91 83       	std	Z+1, r25	; 0x01
     592:	80 83       	st	Z, r24
     594:	de 01       	movw	r26, r28
     596:	ab 5a       	subi	r26, 0xAB	; 171
     598:	bf 4f       	sbci	r27, 0xFF	; 255
     59a:	fe 01       	movw	r30, r28
     59c:	e7 5a       	subi	r30, 0xA7	; 167
     59e:	ff 4f       	sbci	r31, 0xFF	; 255
     5a0:	80 81       	ld	r24, Z
     5a2:	91 81       	ldd	r25, Z+1	; 0x01
     5a4:	11 96       	adiw	r26, 0x01	; 1
     5a6:	9c 93       	st	X, r25
     5a8:	8e 93       	st	-X, r24
     5aa:	fe 01       	movw	r30, r28
     5ac:	eb 5a       	subi	r30, 0xAB	; 171
     5ae:	ff 4f       	sbci	r31, 0xFF	; 255
     5b0:	80 81       	ld	r24, Z
     5b2:	91 81       	ldd	r25, Z+1	; 0x01
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <main+0x436>
     5b8:	fe 01       	movw	r30, r28
     5ba:	eb 5a       	subi	r30, 0xAB	; 171
     5bc:	ff 4f       	sbci	r31, 0xFF	; 255
     5be:	91 83       	std	Z+1, r25	; 0x01
     5c0:	80 83       	st	Z, r24
			_delay_ms(500);
			PORTA=0x00;
     5c2:	eb e3       	ldi	r30, 0x3B	; 59
     5c4:	f0 e0       	ldi	r31, 0x00	; 0
     5c6:	10 82       	st	Z, r1
     5c8:	6e ce       	rjmp	.-804    	; 0x2a6 <main+0x128>
		}
		else if(str=='3') {
     5ca:	fe 01       	movw	r30, r28
     5cc:	ef 58       	subi	r30, 0x8F	; 143
     5ce:	ff 4f       	sbci	r31, 0xFF	; 255
     5d0:	80 81       	ld	r24, Z
     5d2:	83 33       	cpi	r24, 0x33	; 51
     5d4:	09 f0       	breq	.+2      	; 0x5d8 <main+0x45a>
     5d6:	bc c0       	rjmp	.+376    	; 0x750 <main+0x5d2>
			PORTA=0x20;
     5d8:	eb e3       	ldi	r30, 0x3B	; 59
     5da:	f0 e0       	ldi	r31, 0x00	; 0
     5dc:	80 e2       	ldi	r24, 0x20	; 32
     5de:	80 83       	st	Z, r24
     5e0:	fe 01       	movw	r30, r28
     5e2:	ef 5a       	subi	r30, 0xAF	; 175
     5e4:	ff 4f       	sbci	r31, 0xFF	; 255
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	aa ef       	ldi	r26, 0xFA	; 250
     5ec:	b3 e4       	ldi	r27, 0x43	; 67
     5ee:	80 83       	st	Z, r24
     5f0:	91 83       	std	Z+1, r25	; 0x01
     5f2:	a2 83       	std	Z+2, r26	; 0x02
     5f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5f6:	8e 01       	movw	r16, r28
     5f8:	03 5b       	subi	r16, 0xB3	; 179
     5fa:	1f 4f       	sbci	r17, 0xFF	; 255
     5fc:	fe 01       	movw	r30, r28
     5fe:	ef 5a       	subi	r30, 0xAF	; 175
     600:	ff 4f       	sbci	r31, 0xFF	; 255
     602:	60 81       	ld	r22, Z
     604:	71 81       	ldd	r23, Z+1	; 0x01
     606:	82 81       	ldd	r24, Z+2	; 0x02
     608:	93 81       	ldd	r25, Z+3	; 0x03
     60a:	26 e6       	ldi	r18, 0x66	; 102
     60c:	36 e6       	ldi	r19, 0x66	; 102
     60e:	46 ee       	ldi	r20, 0xE6	; 230
     610:	54 e4       	ldi	r21, 0x44	; 68
     612:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     616:	dc 01       	movw	r26, r24
     618:	cb 01       	movw	r24, r22
     61a:	f8 01       	movw	r30, r16
     61c:	80 83       	st	Z, r24
     61e:	91 83       	std	Z+1, r25	; 0x01
     620:	a2 83       	std	Z+2, r26	; 0x02
     622:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     624:	fe 01       	movw	r30, r28
     626:	e3 5b       	subi	r30, 0xB3	; 179
     628:	ff 4f       	sbci	r31, 0xFF	; 255
     62a:	60 81       	ld	r22, Z
     62c:	71 81       	ldd	r23, Z+1	; 0x01
     62e:	82 81       	ldd	r24, Z+2	; 0x02
     630:	93 81       	ldd	r25, Z+3	; 0x03
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	40 e8       	ldi	r20, 0x80	; 128
     638:	5f e3       	ldi	r21, 0x3F	; 63
     63a:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     63e:	88 23       	and	r24, r24
     640:	44 f4       	brge	.+16     	; 0x652 <main+0x4d4>
		__ticks = 1;
     642:	fe 01       	movw	r30, r28
     644:	e5 5b       	subi	r30, 0xB5	; 181
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	91 83       	std	Z+1, r25	; 0x01
     64e:	80 83       	st	Z, r24
     650:	64 c0       	rjmp	.+200    	; 0x71a <main+0x59c>
	else if (__tmp > 65535)
     652:	fe 01       	movw	r30, r28
     654:	e3 5b       	subi	r30, 0xB3	; 179
     656:	ff 4f       	sbci	r31, 0xFF	; 255
     658:	60 81       	ld	r22, Z
     65a:	71 81       	ldd	r23, Z+1	; 0x01
     65c:	82 81       	ldd	r24, Z+2	; 0x02
     65e:	93 81       	ldd	r25, Z+3	; 0x03
     660:	20 e0       	ldi	r18, 0x00	; 0
     662:	3f ef       	ldi	r19, 0xFF	; 255
     664:	4f e7       	ldi	r20, 0x7F	; 127
     666:	57 e4       	ldi	r21, 0x47	; 71
     668:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     66c:	18 16       	cp	r1, r24
     66e:	0c f0       	brlt	.+2      	; 0x672 <main+0x4f4>
     670:	43 c0       	rjmp	.+134    	; 0x6f8 <main+0x57a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     672:	fe 01       	movw	r30, r28
     674:	ef 5a       	subi	r30, 0xAF	; 175
     676:	ff 4f       	sbci	r31, 0xFF	; 255
     678:	60 81       	ld	r22, Z
     67a:	71 81       	ldd	r23, Z+1	; 0x01
     67c:	82 81       	ldd	r24, Z+2	; 0x02
     67e:	93 81       	ldd	r25, Z+3	; 0x03
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	40 e2       	ldi	r20, 0x20	; 32
     686:	51 e4       	ldi	r21, 0x41	; 65
     688:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     68c:	dc 01       	movw	r26, r24
     68e:	cb 01       	movw	r24, r22
     690:	8e 01       	movw	r16, r28
     692:	05 5b       	subi	r16, 0xB5	; 181
     694:	1f 4f       	sbci	r17, 0xFF	; 255
     696:	bc 01       	movw	r22, r24
     698:	cd 01       	movw	r24, r26
     69a:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     69e:	dc 01       	movw	r26, r24
     6a0:	cb 01       	movw	r24, r22
     6a2:	f8 01       	movw	r30, r16
     6a4:	91 83       	std	Z+1, r25	; 0x01
     6a6:	80 83       	st	Z, r24
     6a8:	1f c0       	rjmp	.+62     	; 0x6e8 <main+0x56a>
     6aa:	fe 01       	movw	r30, r28
     6ac:	e7 5b       	subi	r30, 0xB7	; 183
     6ae:	ff 4f       	sbci	r31, 0xFF	; 255
     6b0:	88 eb       	ldi	r24, 0xB8	; 184
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	91 83       	std	Z+1, r25	; 0x01
     6b6:	80 83       	st	Z, r24
     6b8:	fe 01       	movw	r30, r28
     6ba:	e7 5b       	subi	r30, 0xB7	; 183
     6bc:	ff 4f       	sbci	r31, 0xFF	; 255
     6be:	80 81       	ld	r24, Z
     6c0:	91 81       	ldd	r25, Z+1	; 0x01
     6c2:	01 97       	sbiw	r24, 0x01	; 1
     6c4:	f1 f7       	brne	.-4      	; 0x6c2 <main+0x544>
     6c6:	fe 01       	movw	r30, r28
     6c8:	e7 5b       	subi	r30, 0xB7	; 183
     6ca:	ff 4f       	sbci	r31, 0xFF	; 255
     6cc:	91 83       	std	Z+1, r25	; 0x01
     6ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6d0:	de 01       	movw	r26, r28
     6d2:	a5 5b       	subi	r26, 0xB5	; 181
     6d4:	bf 4f       	sbci	r27, 0xFF	; 255
     6d6:	fe 01       	movw	r30, r28
     6d8:	e5 5b       	subi	r30, 0xB5	; 181
     6da:	ff 4f       	sbci	r31, 0xFF	; 255
     6dc:	80 81       	ld	r24, Z
     6de:	91 81       	ldd	r25, Z+1	; 0x01
     6e0:	01 97       	sbiw	r24, 0x01	; 1
     6e2:	11 96       	adiw	r26, 0x01	; 1
     6e4:	9c 93       	st	X, r25
     6e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6e8:	fe 01       	movw	r30, r28
     6ea:	e5 5b       	subi	r30, 0xB5	; 181
     6ec:	ff 4f       	sbci	r31, 0xFF	; 255
     6ee:	80 81       	ld	r24, Z
     6f0:	91 81       	ldd	r25, Z+1	; 0x01
     6f2:	00 97       	sbiw	r24, 0x00	; 0
     6f4:	d1 f6       	brne	.-76     	; 0x6aa <main+0x52c>
     6f6:	28 c0       	rjmp	.+80     	; 0x748 <main+0x5ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6f8:	8e 01       	movw	r16, r28
     6fa:	05 5b       	subi	r16, 0xB5	; 181
     6fc:	1f 4f       	sbci	r17, 0xFF	; 255
     6fe:	fe 01       	movw	r30, r28
     700:	e3 5b       	subi	r30, 0xB3	; 179
     702:	ff 4f       	sbci	r31, 0xFF	; 255
     704:	60 81       	ld	r22, Z
     706:	71 81       	ldd	r23, Z+1	; 0x01
     708:	82 81       	ldd	r24, Z+2	; 0x02
     70a:	93 81       	ldd	r25, Z+3	; 0x03
     70c:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     710:	dc 01       	movw	r26, r24
     712:	cb 01       	movw	r24, r22
     714:	f8 01       	movw	r30, r16
     716:	91 83       	std	Z+1, r25	; 0x01
     718:	80 83       	st	Z, r24
     71a:	de 01       	movw	r26, r28
     71c:	a9 5b       	subi	r26, 0xB9	; 185
     71e:	bf 4f       	sbci	r27, 0xFF	; 255
     720:	fe 01       	movw	r30, r28
     722:	e5 5b       	subi	r30, 0xB5	; 181
     724:	ff 4f       	sbci	r31, 0xFF	; 255
     726:	80 81       	ld	r24, Z
     728:	91 81       	ldd	r25, Z+1	; 0x01
     72a:	11 96       	adiw	r26, 0x01	; 1
     72c:	9c 93       	st	X, r25
     72e:	8e 93       	st	-X, r24
     730:	fe 01       	movw	r30, r28
     732:	e9 5b       	subi	r30, 0xB9	; 185
     734:	ff 4f       	sbci	r31, 0xFF	; 255
     736:	80 81       	ld	r24, Z
     738:	91 81       	ldd	r25, Z+1	; 0x01
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <main+0x5bc>
     73e:	fe 01       	movw	r30, r28
     740:	e9 5b       	subi	r30, 0xB9	; 185
     742:	ff 4f       	sbci	r31, 0xFF	; 255
     744:	91 83       	std	Z+1, r25	; 0x01
     746:	80 83       	st	Z, r24
			_delay_ms(500);
			PORTA=0x00;
     748:	eb e3       	ldi	r30, 0x3B	; 59
     74a:	f0 e0       	ldi	r31, 0x00	; 0
     74c:	10 82       	st	Z, r1
     74e:	ab cd       	rjmp	.-1194   	; 0x2a6 <main+0x128>
		}
		else if(str=='4') {
     750:	fe 01       	movw	r30, r28
     752:	ef 58       	subi	r30, 0x8F	; 143
     754:	ff 4f       	sbci	r31, 0xFF	; 255
     756:	80 81       	ld	r24, Z
     758:	84 33       	cpi	r24, 0x34	; 52
     75a:	09 f0       	breq	.+2      	; 0x75e <main+0x5e0>
     75c:	8d c0       	rjmp	.+282    	; 0x878 <main+0x6fa>
			PORTA=0x10;
     75e:	eb e3       	ldi	r30, 0x3B	; 59
     760:	f0 e0       	ldi	r31, 0x00	; 0
     762:	80 e1       	ldi	r24, 0x10	; 16
     764:	80 83       	st	Z, r24
     766:	fe 01       	movw	r30, r28
     768:	ed 5b       	subi	r30, 0xBD	; 189
     76a:	ff 4f       	sbci	r31, 0xFF	; 255
     76c:	80 e0       	ldi	r24, 0x00	; 0
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	aa ef       	ldi	r26, 0xFA	; 250
     772:	b3 e4       	ldi	r27, 0x43	; 67
     774:	80 83       	st	Z, r24
     776:	91 83       	std	Z+1, r25	; 0x01
     778:	a2 83       	std	Z+2, r26	; 0x02
     77a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     77c:	8e 01       	movw	r16, r28
     77e:	01 5c       	subi	r16, 0xC1	; 193
     780:	1f 4f       	sbci	r17, 0xFF	; 255
     782:	fe 01       	movw	r30, r28
     784:	ed 5b       	subi	r30, 0xBD	; 189
     786:	ff 4f       	sbci	r31, 0xFF	; 255
     788:	60 81       	ld	r22, Z
     78a:	71 81       	ldd	r23, Z+1	; 0x01
     78c:	82 81       	ldd	r24, Z+2	; 0x02
     78e:	93 81       	ldd	r25, Z+3	; 0x03
     790:	26 e6       	ldi	r18, 0x66	; 102
     792:	36 e6       	ldi	r19, 0x66	; 102
     794:	46 ee       	ldi	r20, 0xE6	; 230
     796:	54 e4       	ldi	r21, 0x44	; 68
     798:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     79c:	dc 01       	movw	r26, r24
     79e:	cb 01       	movw	r24, r22
     7a0:	f8 01       	movw	r30, r16
     7a2:	80 83       	st	Z, r24
     7a4:	91 83       	std	Z+1, r25	; 0x01
     7a6:	a2 83       	std	Z+2, r26	; 0x02
     7a8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     7aa:	fe 01       	movw	r30, r28
     7ac:	ff 96       	adiw	r30, 0x3f	; 63
     7ae:	60 81       	ld	r22, Z
     7b0:	71 81       	ldd	r23, Z+1	; 0x01
     7b2:	82 81       	ldd	r24, Z+2	; 0x02
     7b4:	93 81       	ldd	r25, Z+3	; 0x03
     7b6:	20 e0       	ldi	r18, 0x00	; 0
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	40 e8       	ldi	r20, 0x80	; 128
     7bc:	5f e3       	ldi	r21, 0x3F	; 63
     7be:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     7c2:	88 23       	and	r24, r24
     7c4:	2c f4       	brge	.+10     	; 0x7d0 <main+0x652>
		__ticks = 1;
     7c6:	81 e0       	ldi	r24, 0x01	; 1
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	9e af       	std	Y+62, r25	; 0x3e
     7cc:	8d af       	std	Y+61, r24	; 0x3d
     7ce:	46 c0       	rjmp	.+140    	; 0x85c <main+0x6de>
	else if (__tmp > 65535)
     7d0:	fe 01       	movw	r30, r28
     7d2:	ff 96       	adiw	r30, 0x3f	; 63
     7d4:	60 81       	ld	r22, Z
     7d6:	71 81       	ldd	r23, Z+1	; 0x01
     7d8:	82 81       	ldd	r24, Z+2	; 0x02
     7da:	93 81       	ldd	r25, Z+3	; 0x03
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f e7       	ldi	r20, 0x7F	; 127
     7e2:	57 e4       	ldi	r21, 0x47	; 71
     7e4:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     7e8:	18 16       	cp	r1, r24
     7ea:	64 f5       	brge	.+88     	; 0x844 <main+0x6c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7ec:	fe 01       	movw	r30, r28
     7ee:	ed 5b       	subi	r30, 0xBD	; 189
     7f0:	ff 4f       	sbci	r31, 0xFF	; 255
     7f2:	60 81       	ld	r22, Z
     7f4:	71 81       	ldd	r23, Z+1	; 0x01
     7f6:	82 81       	ldd	r24, Z+2	; 0x02
     7f8:	93 81       	ldd	r25, Z+3	; 0x03
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	40 e2       	ldi	r20, 0x20	; 32
     800:	51 e4       	ldi	r21, 0x41	; 65
     802:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     806:	dc 01       	movw	r26, r24
     808:	cb 01       	movw	r24, r22
     80a:	bc 01       	movw	r22, r24
     80c:	cd 01       	movw	r24, r26
     80e:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     812:	dc 01       	movw	r26, r24
     814:	cb 01       	movw	r24, r22
     816:	9e af       	std	Y+62, r25	; 0x3e
     818:	8d af       	std	Y+61, r24	; 0x3d
     81a:	0f c0       	rjmp	.+30     	; 0x83a <main+0x6bc>
     81c:	88 eb       	ldi	r24, 0xB8	; 184
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	9c af       	std	Y+60, r25	; 0x3c
     822:	8b af       	std	Y+59, r24	; 0x3b
     824:	8b ad       	ldd	r24, Y+59	; 0x3b
     826:	9c ad       	ldd	r25, Y+60	; 0x3c
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	f1 f7       	brne	.-4      	; 0x828 <main+0x6aa>
     82c:	9c af       	std	Y+60, r25	; 0x3c
     82e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     830:	8d ad       	ldd	r24, Y+61	; 0x3d
     832:	9e ad       	ldd	r25, Y+62	; 0x3e
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	9e af       	std	Y+62, r25	; 0x3e
     838:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     83a:	8d ad       	ldd	r24, Y+61	; 0x3d
     83c:	9e ad       	ldd	r25, Y+62	; 0x3e
     83e:	00 97       	sbiw	r24, 0x00	; 0
     840:	69 f7       	brne	.-38     	; 0x81c <main+0x69e>
     842:	16 c0       	rjmp	.+44     	; 0x870 <main+0x6f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     844:	fe 01       	movw	r30, r28
     846:	ff 96       	adiw	r30, 0x3f	; 63
     848:	60 81       	ld	r22, Z
     84a:	71 81       	ldd	r23, Z+1	; 0x01
     84c:	82 81       	ldd	r24, Z+2	; 0x02
     84e:	93 81       	ldd	r25, Z+3	; 0x03
     850:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     854:	dc 01       	movw	r26, r24
     856:	cb 01       	movw	r24, r22
     858:	9e af       	std	Y+62, r25	; 0x3e
     85a:	8d af       	std	Y+61, r24	; 0x3d
     85c:	8d ad       	ldd	r24, Y+61	; 0x3d
     85e:	9e ad       	ldd	r25, Y+62	; 0x3e
     860:	9a af       	std	Y+58, r25	; 0x3a
     862:	89 af       	std	Y+57, r24	; 0x39
     864:	89 ad       	ldd	r24, Y+57	; 0x39
     866:	9a ad       	ldd	r25, Y+58	; 0x3a
     868:	01 97       	sbiw	r24, 0x01	; 1
     86a:	f1 f7       	brne	.-4      	; 0x868 <main+0x6ea>
     86c:	9a af       	std	Y+58, r25	; 0x3a
     86e:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(500);
			PORTA=0x00;
     870:	eb e3       	ldi	r30, 0x3B	; 59
     872:	f0 e0       	ldi	r31, 0x00	; 0
     874:	10 82       	st	Z, r1
     876:	17 cd       	rjmp	.-1490   	; 0x2a6 <main+0x128>
		}
		else if(str=='5') {
     878:	fe 01       	movw	r30, r28
     87a:	ef 58       	subi	r30, 0x8F	; 143
     87c:	ff 4f       	sbci	r31, 0xFF	; 255
     87e:	80 81       	ld	r24, Z
     880:	85 33       	cpi	r24, 0x35	; 53
     882:	09 f0       	breq	.+2      	; 0x886 <main+0x708>
     884:	7a c0       	rjmp	.+244    	; 0x97a <main+0x7fc>
			PORTA=0x08;
     886:	eb e3       	ldi	r30, 0x3B	; 59
     888:	f0 e0       	ldi	r31, 0x00	; 0
     88a:	88 e0       	ldi	r24, 0x08	; 8
     88c:	80 83       	st	Z, r24
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	aa ef       	ldi	r26, 0xFA	; 250
     894:	b3 e4       	ldi	r27, 0x43	; 67
     896:	8d ab       	std	Y+53, r24	; 0x35
     898:	9e ab       	std	Y+54, r25	; 0x36
     89a:	af ab       	std	Y+55, r26	; 0x37
     89c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     89e:	6d a9       	ldd	r22, Y+53	; 0x35
     8a0:	7e a9       	ldd	r23, Y+54	; 0x36
     8a2:	8f a9       	ldd	r24, Y+55	; 0x37
     8a4:	98 ad       	ldd	r25, Y+56	; 0x38
     8a6:	26 e6       	ldi	r18, 0x66	; 102
     8a8:	36 e6       	ldi	r19, 0x66	; 102
     8aa:	46 ee       	ldi	r20, 0xE6	; 230
     8ac:	54 e4       	ldi	r21, 0x44	; 68
     8ae:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	89 ab       	std	Y+49, r24	; 0x31
     8b8:	9a ab       	std	Y+50, r25	; 0x32
     8ba:	ab ab       	std	Y+51, r26	; 0x33
     8bc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     8be:	69 a9       	ldd	r22, Y+49	; 0x31
     8c0:	7a a9       	ldd	r23, Y+50	; 0x32
     8c2:	8b a9       	ldd	r24, Y+51	; 0x33
     8c4:	9c a9       	ldd	r25, Y+52	; 0x34
     8c6:	20 e0       	ldi	r18, 0x00	; 0
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	40 e8       	ldi	r20, 0x80	; 128
     8cc:	5f e3       	ldi	r21, 0x3F	; 63
     8ce:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     8d2:	88 23       	and	r24, r24
     8d4:	2c f4       	brge	.+10     	; 0x8e0 <main+0x762>
		__ticks = 1;
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	98 ab       	std	Y+48, r25	; 0x30
     8dc:	8f a7       	std	Y+47, r24	; 0x2f
     8de:	3f c0       	rjmp	.+126    	; 0x95e <main+0x7e0>
	else if (__tmp > 65535)
     8e0:	69 a9       	ldd	r22, Y+49	; 0x31
     8e2:	7a a9       	ldd	r23, Y+50	; 0x32
     8e4:	8b a9       	ldd	r24, Y+51	; 0x33
     8e6:	9c a9       	ldd	r25, Y+52	; 0x34
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	3f ef       	ldi	r19, 0xFF	; 255
     8ec:	4f e7       	ldi	r20, 0x7F	; 127
     8ee:	57 e4       	ldi	r21, 0x47	; 71
     8f0:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     8f4:	18 16       	cp	r1, r24
     8f6:	4c f5       	brge	.+82     	; 0x94a <main+0x7cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8f8:	6d a9       	ldd	r22, Y+53	; 0x35
     8fa:	7e a9       	ldd	r23, Y+54	; 0x36
     8fc:	8f a9       	ldd	r24, Y+55	; 0x37
     8fe:	98 ad       	ldd	r25, Y+56	; 0x38
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	40 e2       	ldi	r20, 0x20	; 32
     906:	51 e4       	ldi	r21, 0x41	; 65
     908:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     90c:	dc 01       	movw	r26, r24
     90e:	cb 01       	movw	r24, r22
     910:	bc 01       	movw	r22, r24
     912:	cd 01       	movw	r24, r26
     914:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     918:	dc 01       	movw	r26, r24
     91a:	cb 01       	movw	r24, r22
     91c:	98 ab       	std	Y+48, r25	; 0x30
     91e:	8f a7       	std	Y+47, r24	; 0x2f
     920:	0f c0       	rjmp	.+30     	; 0x940 <main+0x7c2>
     922:	88 eb       	ldi	r24, 0xB8	; 184
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	9e a7       	std	Y+46, r25	; 0x2e
     928:	8d a7       	std	Y+45, r24	; 0x2d
     92a:	8d a5       	ldd	r24, Y+45	; 0x2d
     92c:	9e a5       	ldd	r25, Y+46	; 0x2e
     92e:	01 97       	sbiw	r24, 0x01	; 1
     930:	f1 f7       	brne	.-4      	; 0x92e <main+0x7b0>
     932:	9e a7       	std	Y+46, r25	; 0x2e
     934:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     936:	8f a5       	ldd	r24, Y+47	; 0x2f
     938:	98 a9       	ldd	r25, Y+48	; 0x30
     93a:	01 97       	sbiw	r24, 0x01	; 1
     93c:	98 ab       	std	Y+48, r25	; 0x30
     93e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     940:	8f a5       	ldd	r24, Y+47	; 0x2f
     942:	98 a9       	ldd	r25, Y+48	; 0x30
     944:	00 97       	sbiw	r24, 0x00	; 0
     946:	69 f7       	brne	.-38     	; 0x922 <main+0x7a4>
     948:	14 c0       	rjmp	.+40     	; 0x972 <main+0x7f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     94a:	69 a9       	ldd	r22, Y+49	; 0x31
     94c:	7a a9       	ldd	r23, Y+50	; 0x32
     94e:	8b a9       	ldd	r24, Y+51	; 0x33
     950:	9c a9       	ldd	r25, Y+52	; 0x34
     952:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     956:	dc 01       	movw	r26, r24
     958:	cb 01       	movw	r24, r22
     95a:	98 ab       	std	Y+48, r25	; 0x30
     95c:	8f a7       	std	Y+47, r24	; 0x2f
     95e:	8f a5       	ldd	r24, Y+47	; 0x2f
     960:	98 a9       	ldd	r25, Y+48	; 0x30
     962:	9c a7       	std	Y+44, r25	; 0x2c
     964:	8b a7       	std	Y+43, r24	; 0x2b
     966:	8b a5       	ldd	r24, Y+43	; 0x2b
     968:	9c a5       	ldd	r25, Y+44	; 0x2c
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	f1 f7       	brne	.-4      	; 0x96a <main+0x7ec>
     96e:	9c a7       	std	Y+44, r25	; 0x2c
     970:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(500);
			PORTA=0x00;
     972:	eb e3       	ldi	r30, 0x3B	; 59
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	10 82       	st	Z, r1
     978:	96 cc       	rjmp	.-1748   	; 0x2a6 <main+0x128>
		}
		else if(str=='6') {
     97a:	fe 01       	movw	r30, r28
     97c:	ef 58       	subi	r30, 0x8F	; 143
     97e:	ff 4f       	sbci	r31, 0xFF	; 255
     980:	80 81       	ld	r24, Z
     982:	86 33       	cpi	r24, 0x36	; 54
     984:	09 f0       	breq	.+2      	; 0x988 <main+0x80a>
     986:	7a c0       	rjmp	.+244    	; 0xa7c <main+0x8fe>
			PORTA=0x04;
     988:	eb e3       	ldi	r30, 0x3B	; 59
     98a:	f0 e0       	ldi	r31, 0x00	; 0
     98c:	84 e0       	ldi	r24, 0x04	; 4
     98e:	80 83       	st	Z, r24
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	aa ef       	ldi	r26, 0xFA	; 250
     996:	b3 e4       	ldi	r27, 0x43	; 67
     998:	8f a3       	std	Y+39, r24	; 0x27
     99a:	98 a7       	std	Y+40, r25	; 0x28
     99c:	a9 a7       	std	Y+41, r26	; 0x29
     99e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9a0:	6f a1       	ldd	r22, Y+39	; 0x27
     9a2:	78 a5       	ldd	r23, Y+40	; 0x28
     9a4:	89 a5       	ldd	r24, Y+41	; 0x29
     9a6:	9a a5       	ldd	r25, Y+42	; 0x2a
     9a8:	26 e6       	ldi	r18, 0x66	; 102
     9aa:	36 e6       	ldi	r19, 0x66	; 102
     9ac:	46 ee       	ldi	r20, 0xE6	; 230
     9ae:	54 e4       	ldi	r21, 0x44	; 68
     9b0:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     9b4:	dc 01       	movw	r26, r24
     9b6:	cb 01       	movw	r24, r22
     9b8:	8b a3       	std	Y+35, r24	; 0x23
     9ba:	9c a3       	std	Y+36, r25	; 0x24
     9bc:	ad a3       	std	Y+37, r26	; 0x25
     9be:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     9c0:	6b a1       	ldd	r22, Y+35	; 0x23
     9c2:	7c a1       	ldd	r23, Y+36	; 0x24
     9c4:	8d a1       	ldd	r24, Y+37	; 0x25
     9c6:	9e a1       	ldd	r25, Y+38	; 0x26
     9c8:	20 e0       	ldi	r18, 0x00	; 0
     9ca:	30 e0       	ldi	r19, 0x00	; 0
     9cc:	40 e8       	ldi	r20, 0x80	; 128
     9ce:	5f e3       	ldi	r21, 0x3F	; 63
     9d0:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     9d4:	88 23       	and	r24, r24
     9d6:	2c f4       	brge	.+10     	; 0x9e2 <main+0x864>
		__ticks = 1;
     9d8:	81 e0       	ldi	r24, 0x01	; 1
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	9a a3       	std	Y+34, r25	; 0x22
     9de:	89 a3       	std	Y+33, r24	; 0x21
     9e0:	3f c0       	rjmp	.+126    	; 0xa60 <main+0x8e2>
	else if (__tmp > 65535)
     9e2:	6b a1       	ldd	r22, Y+35	; 0x23
     9e4:	7c a1       	ldd	r23, Y+36	; 0x24
     9e6:	8d a1       	ldd	r24, Y+37	; 0x25
     9e8:	9e a1       	ldd	r25, Y+38	; 0x26
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	3f ef       	ldi	r19, 0xFF	; 255
     9ee:	4f e7       	ldi	r20, 0x7F	; 127
     9f0:	57 e4       	ldi	r21, 0x47	; 71
     9f2:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     9f6:	18 16       	cp	r1, r24
     9f8:	4c f5       	brge	.+82     	; 0xa4c <main+0x8ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9fa:	6f a1       	ldd	r22, Y+39	; 0x27
     9fc:	78 a5       	ldd	r23, Y+40	; 0x28
     9fe:	89 a5       	ldd	r24, Y+41	; 0x29
     a00:	9a a5       	ldd	r25, Y+42	; 0x2a
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	40 e2       	ldi	r20, 0x20	; 32
     a08:	51 e4       	ldi	r21, 0x41	; 65
     a0a:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     a0e:	dc 01       	movw	r26, r24
     a10:	cb 01       	movw	r24, r22
     a12:	bc 01       	movw	r22, r24
     a14:	cd 01       	movw	r24, r26
     a16:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     a1a:	dc 01       	movw	r26, r24
     a1c:	cb 01       	movw	r24, r22
     a1e:	9a a3       	std	Y+34, r25	; 0x22
     a20:	89 a3       	std	Y+33, r24	; 0x21
     a22:	0f c0       	rjmp	.+30     	; 0xa42 <main+0x8c4>
     a24:	88 eb       	ldi	r24, 0xB8	; 184
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	98 a3       	std	Y+32, r25	; 0x20
     a2a:	8f 8f       	std	Y+31, r24	; 0x1f
     a2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a2e:	98 a1       	ldd	r25, Y+32	; 0x20
     a30:	01 97       	sbiw	r24, 0x01	; 1
     a32:	f1 f7       	brne	.-4      	; 0xa30 <main+0x8b2>
     a34:	98 a3       	std	Y+32, r25	; 0x20
     a36:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a38:	89 a1       	ldd	r24, Y+33	; 0x21
     a3a:	9a a1       	ldd	r25, Y+34	; 0x22
     a3c:	01 97       	sbiw	r24, 0x01	; 1
     a3e:	9a a3       	std	Y+34, r25	; 0x22
     a40:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a42:	89 a1       	ldd	r24, Y+33	; 0x21
     a44:	9a a1       	ldd	r25, Y+34	; 0x22
     a46:	00 97       	sbiw	r24, 0x00	; 0
     a48:	69 f7       	brne	.-38     	; 0xa24 <main+0x8a6>
     a4a:	14 c0       	rjmp	.+40     	; 0xa74 <main+0x8f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a4c:	6b a1       	ldd	r22, Y+35	; 0x23
     a4e:	7c a1       	ldd	r23, Y+36	; 0x24
     a50:	8d a1       	ldd	r24, Y+37	; 0x25
     a52:	9e a1       	ldd	r25, Y+38	; 0x26
     a54:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     a58:	dc 01       	movw	r26, r24
     a5a:	cb 01       	movw	r24, r22
     a5c:	9a a3       	std	Y+34, r25	; 0x22
     a5e:	89 a3       	std	Y+33, r24	; 0x21
     a60:	89 a1       	ldd	r24, Y+33	; 0x21
     a62:	9a a1       	ldd	r25, Y+34	; 0x22
     a64:	9e 8f       	std	Y+30, r25	; 0x1e
     a66:	8d 8f       	std	Y+29, r24	; 0x1d
     a68:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a6a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	f1 f7       	brne	.-4      	; 0xa6c <main+0x8ee>
     a70:	9e 8f       	std	Y+30, r25	; 0x1e
     a72:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(500);
			PORTA=0x00;
     a74:	eb e3       	ldi	r30, 0x3B	; 59
     a76:	f0 e0       	ldi	r31, 0x00	; 0
     a78:	10 82       	st	Z, r1
     a7a:	15 cc       	rjmp	.-2006   	; 0x2a6 <main+0x128>
		}
		else if(str=='7') {
     a7c:	fe 01       	movw	r30, r28
     a7e:	ef 58       	subi	r30, 0x8F	; 143
     a80:	ff 4f       	sbci	r31, 0xFF	; 255
     a82:	80 81       	ld	r24, Z
     a84:	87 33       	cpi	r24, 0x37	; 55
     a86:	09 f0       	breq	.+2      	; 0xa8a <main+0x90c>
     a88:	7a c0       	rjmp	.+244    	; 0xb7e <main+0xa00>
			PORTA=0x02;
     a8a:	eb e3       	ldi	r30, 0x3B	; 59
     a8c:	f0 e0       	ldi	r31, 0x00	; 0
     a8e:	82 e0       	ldi	r24, 0x02	; 2
     a90:	80 83       	st	Z, r24
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	aa ef       	ldi	r26, 0xFA	; 250
     a98:	b3 e4       	ldi	r27, 0x43	; 67
     a9a:	89 8f       	std	Y+25, r24	; 0x19
     a9c:	9a 8f       	std	Y+26, r25	; 0x1a
     a9e:	ab 8f       	std	Y+27, r26	; 0x1b
     aa0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     aa2:	69 8d       	ldd	r22, Y+25	; 0x19
     aa4:	7a 8d       	ldd	r23, Y+26	; 0x1a
     aa6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     aa8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     aaa:	26 e6       	ldi	r18, 0x66	; 102
     aac:	36 e6       	ldi	r19, 0x66	; 102
     aae:	46 ee       	ldi	r20, 0xE6	; 230
     ab0:	54 e4       	ldi	r21, 0x44	; 68
     ab2:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     ab6:	dc 01       	movw	r26, r24
     ab8:	cb 01       	movw	r24, r22
     aba:	8d 8b       	std	Y+21, r24	; 0x15
     abc:	9e 8b       	std	Y+22, r25	; 0x16
     abe:	af 8b       	std	Y+23, r26	; 0x17
     ac0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     ac2:	6d 89       	ldd	r22, Y+21	; 0x15
     ac4:	7e 89       	ldd	r23, Y+22	; 0x16
     ac6:	8f 89       	ldd	r24, Y+23	; 0x17
     ac8:	98 8d       	ldd	r25, Y+24	; 0x18
     aca:	20 e0       	ldi	r18, 0x00	; 0
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	40 e8       	ldi	r20, 0x80	; 128
     ad0:	5f e3       	ldi	r21, 0x3F	; 63
     ad2:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     ad6:	88 23       	and	r24, r24
     ad8:	2c f4       	brge	.+10     	; 0xae4 <main+0x966>
		__ticks = 1;
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	9c 8b       	std	Y+20, r25	; 0x14
     ae0:	8b 8b       	std	Y+19, r24	; 0x13
     ae2:	3f c0       	rjmp	.+126    	; 0xb62 <main+0x9e4>
	else if (__tmp > 65535)
     ae4:	6d 89       	ldd	r22, Y+21	; 0x15
     ae6:	7e 89       	ldd	r23, Y+22	; 0x16
     ae8:	8f 89       	ldd	r24, Y+23	; 0x17
     aea:	98 8d       	ldd	r25, Y+24	; 0x18
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	3f ef       	ldi	r19, 0xFF	; 255
     af0:	4f e7       	ldi	r20, 0x7F	; 127
     af2:	57 e4       	ldi	r21, 0x47	; 71
     af4:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     af8:	18 16       	cp	r1, r24
     afa:	4c f5       	brge	.+82     	; 0xb4e <main+0x9d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     afc:	69 8d       	ldd	r22, Y+25	; 0x19
     afe:	7a 8d       	ldd	r23, Y+26	; 0x1a
     b00:	8b 8d       	ldd	r24, Y+27	; 0x1b
     b02:	9c 8d       	ldd	r25, Y+28	; 0x1c
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	40 e2       	ldi	r20, 0x20	; 32
     b0a:	51 e4       	ldi	r21, 0x41	; 65
     b0c:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     b10:	dc 01       	movw	r26, r24
     b12:	cb 01       	movw	r24, r22
     b14:	bc 01       	movw	r22, r24
     b16:	cd 01       	movw	r24, r26
     b18:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     b1c:	dc 01       	movw	r26, r24
     b1e:	cb 01       	movw	r24, r22
     b20:	9c 8b       	std	Y+20, r25	; 0x14
     b22:	8b 8b       	std	Y+19, r24	; 0x13
     b24:	0f c0       	rjmp	.+30     	; 0xb44 <main+0x9c6>
     b26:	88 eb       	ldi	r24, 0xB8	; 184
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	9a 8b       	std	Y+18, r25	; 0x12
     b2c:	89 8b       	std	Y+17, r24	; 0x11
     b2e:	89 89       	ldd	r24, Y+17	; 0x11
     b30:	9a 89       	ldd	r25, Y+18	; 0x12
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	f1 f7       	brne	.-4      	; 0xb32 <main+0x9b4>
     b36:	9a 8b       	std	Y+18, r25	; 0x12
     b38:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b3a:	8b 89       	ldd	r24, Y+19	; 0x13
     b3c:	9c 89       	ldd	r25, Y+20	; 0x14
     b3e:	01 97       	sbiw	r24, 0x01	; 1
     b40:	9c 8b       	std	Y+20, r25	; 0x14
     b42:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b44:	8b 89       	ldd	r24, Y+19	; 0x13
     b46:	9c 89       	ldd	r25, Y+20	; 0x14
     b48:	00 97       	sbiw	r24, 0x00	; 0
     b4a:	69 f7       	brne	.-38     	; 0xb26 <main+0x9a8>
     b4c:	14 c0       	rjmp	.+40     	; 0xb76 <main+0x9f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b4e:	6d 89       	ldd	r22, Y+21	; 0x15
     b50:	7e 89       	ldd	r23, Y+22	; 0x16
     b52:	8f 89       	ldd	r24, Y+23	; 0x17
     b54:	98 8d       	ldd	r25, Y+24	; 0x18
     b56:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     b5a:	dc 01       	movw	r26, r24
     b5c:	cb 01       	movw	r24, r22
     b5e:	9c 8b       	std	Y+20, r25	; 0x14
     b60:	8b 8b       	std	Y+19, r24	; 0x13
     b62:	8b 89       	ldd	r24, Y+19	; 0x13
     b64:	9c 89       	ldd	r25, Y+20	; 0x14
     b66:	98 8b       	std	Y+16, r25	; 0x10
     b68:	8f 87       	std	Y+15, r24	; 0x0f
     b6a:	8f 85       	ldd	r24, Y+15	; 0x0f
     b6c:	98 89       	ldd	r25, Y+16	; 0x10
     b6e:	01 97       	sbiw	r24, 0x01	; 1
     b70:	f1 f7       	brne	.-4      	; 0xb6e <main+0x9f0>
     b72:	98 8b       	std	Y+16, r25	; 0x10
     b74:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(500);
			PORTA=0x00;
     b76:	eb e3       	ldi	r30, 0x3B	; 59
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	10 82       	st	Z, r1
     b7c:	94 cb       	rjmp	.-2264   	; 0x2a6 <main+0x128>
		}
		else if(str=='8') {
     b7e:	fe 01       	movw	r30, r28
     b80:	ef 58       	subi	r30, 0x8F	; 143
     b82:	ff 4f       	sbci	r31, 0xFF	; 255
     b84:	80 81       	ld	r24, Z
     b86:	88 33       	cpi	r24, 0x38	; 56
     b88:	09 f0       	breq	.+2      	; 0xb8c <main+0xa0e>
     b8a:	8d cb       	rjmp	.-2278   	; 0x2a6 <main+0x128>
			PORTA=0x01;
     b8c:	eb e3       	ldi	r30, 0x3B	; 59
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	81 e0       	ldi	r24, 0x01	; 1
     b92:	80 83       	st	Z, r24
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	aa ef       	ldi	r26, 0xFA	; 250
     b9a:	b3 e4       	ldi	r27, 0x43	; 67
     b9c:	8b 87       	std	Y+11, r24	; 0x0b
     b9e:	9c 87       	std	Y+12, r25	; 0x0c
     ba0:	ad 87       	std	Y+13, r26	; 0x0d
     ba2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ba4:	6b 85       	ldd	r22, Y+11	; 0x0b
     ba6:	7c 85       	ldd	r23, Y+12	; 0x0c
     ba8:	8d 85       	ldd	r24, Y+13	; 0x0d
     baa:	9e 85       	ldd	r25, Y+14	; 0x0e
     bac:	26 e6       	ldi	r18, 0x66	; 102
     bae:	36 e6       	ldi	r19, 0x66	; 102
     bb0:	46 ee       	ldi	r20, 0xE6	; 230
     bb2:	54 e4       	ldi	r21, 0x44	; 68
     bb4:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     bb8:	dc 01       	movw	r26, r24
     bba:	cb 01       	movw	r24, r22
     bbc:	8f 83       	std	Y+7, r24	; 0x07
     bbe:	98 87       	std	Y+8, r25	; 0x08
     bc0:	a9 87       	std	Y+9, r26	; 0x09
     bc2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     bc4:	6f 81       	ldd	r22, Y+7	; 0x07
     bc6:	78 85       	ldd	r23, Y+8	; 0x08
     bc8:	89 85       	ldd	r24, Y+9	; 0x09
     bca:	9a 85       	ldd	r25, Y+10	; 0x0a
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	40 e8       	ldi	r20, 0x80	; 128
     bd2:	5f e3       	ldi	r21, 0x3F	; 63
     bd4:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__ltsf2>
     bd8:	88 23       	and	r24, r24
     bda:	2c f4       	brge	.+10     	; 0xbe6 <main+0xa68>
		__ticks = 1;
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	9e 83       	std	Y+6, r25	; 0x06
     be2:	8d 83       	std	Y+5, r24	; 0x05
     be4:	3f c0       	rjmp	.+126    	; 0xc64 <main+0xae6>
	else if (__tmp > 65535)
     be6:	6f 81       	ldd	r22, Y+7	; 0x07
     be8:	78 85       	ldd	r23, Y+8	; 0x08
     bea:	89 85       	ldd	r24, Y+9	; 0x09
     bec:	9a 85       	ldd	r25, Y+10	; 0x0a
     bee:	20 e0       	ldi	r18, 0x00	; 0
     bf0:	3f ef       	ldi	r19, 0xFF	; 255
     bf2:	4f e7       	ldi	r20, 0x7F	; 127
     bf4:	57 e4       	ldi	r21, 0x47	; 71
     bf6:	0e 94 10 09 	call	0x1220	; 0x1220 <__gtsf2>
     bfa:	18 16       	cp	r1, r24
     bfc:	4c f5       	brge	.+82     	; 0xc50 <main+0xad2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bfe:	6b 85       	ldd	r22, Y+11	; 0x0b
     c00:	7c 85       	ldd	r23, Y+12	; 0x0c
     c02:	8d 85       	ldd	r24, Y+13	; 0x0d
     c04:	9e 85       	ldd	r25, Y+14	; 0x0e
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	40 e2       	ldi	r20, 0x20	; 32
     c0c:	51 e4       	ldi	r21, 0x41	; 65
     c0e:	0e 94 16 08 	call	0x102c	; 0x102c <__mulsf3>
     c12:	dc 01       	movw	r26, r24
     c14:	cb 01       	movw	r24, r22
     c16:	bc 01       	movw	r22, r24
     c18:	cd 01       	movw	r24, r26
     c1a:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     c1e:	dc 01       	movw	r26, r24
     c20:	cb 01       	movw	r24, r22
     c22:	9e 83       	std	Y+6, r25	; 0x06
     c24:	8d 83       	std	Y+5, r24	; 0x05
     c26:	0f c0       	rjmp	.+30     	; 0xc46 <main+0xac8>
     c28:	88 eb       	ldi	r24, 0xB8	; 184
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	9c 83       	std	Y+4, r25	; 0x04
     c2e:	8b 83       	std	Y+3, r24	; 0x03
     c30:	8b 81       	ldd	r24, Y+3	; 0x03
     c32:	9c 81       	ldd	r25, Y+4	; 0x04
     c34:	01 97       	sbiw	r24, 0x01	; 1
     c36:	f1 f7       	brne	.-4      	; 0xc34 <main+0xab6>
     c38:	9c 83       	std	Y+4, r25	; 0x04
     c3a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c3c:	8d 81       	ldd	r24, Y+5	; 0x05
     c3e:	9e 81       	ldd	r25, Y+6	; 0x06
     c40:	01 97       	sbiw	r24, 0x01	; 1
     c42:	9e 83       	std	Y+6, r25	; 0x06
     c44:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c46:	8d 81       	ldd	r24, Y+5	; 0x05
     c48:	9e 81       	ldd	r25, Y+6	; 0x06
     c4a:	00 97       	sbiw	r24, 0x00	; 0
     c4c:	69 f7       	brne	.-38     	; 0xc28 <main+0xaaa>
     c4e:	14 c0       	rjmp	.+40     	; 0xc78 <main+0xafa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c50:	6f 81       	ldd	r22, Y+7	; 0x07
     c52:	78 85       	ldd	r23, Y+8	; 0x08
     c54:	89 85       	ldd	r24, Y+9	; 0x09
     c56:	9a 85       	ldd	r25, Y+10	; 0x0a
     c58:	0e 94 40 06 	call	0xc80	; 0xc80 <__fixunssfsi>
     c5c:	dc 01       	movw	r26, r24
     c5e:	cb 01       	movw	r24, r22
     c60:	9e 83       	std	Y+6, r25	; 0x06
     c62:	8d 83       	std	Y+5, r24	; 0x05
     c64:	8d 81       	ldd	r24, Y+5	; 0x05
     c66:	9e 81       	ldd	r25, Y+6	; 0x06
     c68:	9a 83       	std	Y+2, r25	; 0x02
     c6a:	89 83       	std	Y+1, r24	; 0x01
     c6c:	89 81       	ldd	r24, Y+1	; 0x01
     c6e:	9a 81       	ldd	r25, Y+2	; 0x02
     c70:	01 97       	sbiw	r24, 0x01	; 1
     c72:	f1 f7       	brne	.-4      	; 0xc70 <main+0xaf2>
     c74:	9a 83       	std	Y+2, r25	; 0x02
     c76:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(500);
			PORTA=0x00;
     c78:	eb e3       	ldi	r30, 0x3B	; 59
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	10 82       	st	Z, r1
     c7e:	13 cb       	rjmp	.-2522   	; 0x2a6 <main+0x128>

00000c80 <__fixunssfsi>:
     c80:	ef 92       	push	r14
     c82:	ff 92       	push	r15
     c84:	0f 93       	push	r16
     c86:	1f 93       	push	r17
     c88:	7b 01       	movw	r14, r22
     c8a:	8c 01       	movw	r16, r24
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	40 e0       	ldi	r20, 0x00	; 0
     c92:	5f e4       	ldi	r21, 0x4F	; 79
     c94:	0e 94 40 09 	call	0x1280	; 0x1280 <__gesf2>
     c98:	88 23       	and	r24, r24
     c9a:	8c f0       	brlt	.+34     	; 0xcbe <__fixunssfsi+0x3e>
     c9c:	c8 01       	movw	r24, r16
     c9e:	b7 01       	movw	r22, r14
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 e0       	ldi	r20, 0x00	; 0
     ca6:	5f e4       	ldi	r21, 0x4F	; 79
     ca8:	0e 94 b8 07 	call	0xf70	; 0xf70 <__subsf3>
     cac:	0e 94 a0 09 	call	0x1340	; 0x1340 <__fixsfsi>
     cb0:	9b 01       	movw	r18, r22
     cb2:	ac 01       	movw	r20, r24
     cb4:	20 50       	subi	r18, 0x00	; 0
     cb6:	30 40       	sbci	r19, 0x00	; 0
     cb8:	40 40       	sbci	r20, 0x00	; 0
     cba:	50 48       	sbci	r21, 0x80	; 128
     cbc:	06 c0       	rjmp	.+12     	; 0xcca <__fixunssfsi+0x4a>
     cbe:	c8 01       	movw	r24, r16
     cc0:	b7 01       	movw	r22, r14
     cc2:	0e 94 a0 09 	call	0x1340	; 0x1340 <__fixsfsi>
     cc6:	9b 01       	movw	r18, r22
     cc8:	ac 01       	movw	r20, r24
     cca:	b9 01       	movw	r22, r18
     ccc:	ca 01       	movw	r24, r20
     cce:	1f 91       	pop	r17
     cd0:	0f 91       	pop	r16
     cd2:	ff 90       	pop	r15
     cd4:	ef 90       	pop	r14
     cd6:	08 95       	ret

00000cd8 <_fpadd_parts>:
     cd8:	a0 e0       	ldi	r26, 0x00	; 0
     cda:	b0 e0       	ldi	r27, 0x00	; 0
     cdc:	e2 e7       	ldi	r30, 0x72	; 114
     cde:	f6 e0       	ldi	r31, 0x06	; 6
     ce0:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__prologue_saves__>
     ce4:	dc 01       	movw	r26, r24
     ce6:	2b 01       	movw	r4, r22
     ce8:	fa 01       	movw	r30, r20
     cea:	9c 91       	ld	r25, X
     cec:	92 30       	cpi	r25, 0x02	; 2
     cee:	08 f4       	brcc	.+2      	; 0xcf2 <_fpadd_parts+0x1a>
     cf0:	39 c1       	rjmp	.+626    	; 0xf64 <_fpadd_parts+0x28c>
     cf2:	eb 01       	movw	r28, r22
     cf4:	88 81       	ld	r24, Y
     cf6:	82 30       	cpi	r24, 0x02	; 2
     cf8:	08 f4       	brcc	.+2      	; 0xcfc <_fpadd_parts+0x24>
     cfa:	33 c1       	rjmp	.+614    	; 0xf62 <_fpadd_parts+0x28a>
     cfc:	94 30       	cpi	r25, 0x04	; 4
     cfe:	69 f4       	brne	.+26     	; 0xd1a <_fpadd_parts+0x42>
     d00:	84 30       	cpi	r24, 0x04	; 4
     d02:	09 f0       	breq	.+2      	; 0xd06 <_fpadd_parts+0x2e>
     d04:	2f c1       	rjmp	.+606    	; 0xf64 <_fpadd_parts+0x28c>
     d06:	11 96       	adiw	r26, 0x01	; 1
     d08:	9c 91       	ld	r25, X
     d0a:	11 97       	sbiw	r26, 0x01	; 1
     d0c:	89 81       	ldd	r24, Y+1	; 0x01
     d0e:	98 17       	cp	r25, r24
     d10:	09 f4       	brne	.+2      	; 0xd14 <_fpadd_parts+0x3c>
     d12:	28 c1       	rjmp	.+592    	; 0xf64 <_fpadd_parts+0x28c>
     d14:	af e0       	ldi	r26, 0x0F	; 15
     d16:	b1 e0       	ldi	r27, 0x01	; 1
     d18:	25 c1       	rjmp	.+586    	; 0xf64 <_fpadd_parts+0x28c>
     d1a:	84 30       	cpi	r24, 0x04	; 4
     d1c:	09 f4       	brne	.+2      	; 0xd20 <_fpadd_parts+0x48>
     d1e:	21 c1       	rjmp	.+578    	; 0xf62 <_fpadd_parts+0x28a>
     d20:	82 30       	cpi	r24, 0x02	; 2
     d22:	a9 f4       	brne	.+42     	; 0xd4e <_fpadd_parts+0x76>
     d24:	92 30       	cpi	r25, 0x02	; 2
     d26:	09 f0       	breq	.+2      	; 0xd2a <_fpadd_parts+0x52>
     d28:	1d c1       	rjmp	.+570    	; 0xf64 <_fpadd_parts+0x28c>
     d2a:	9a 01       	movw	r18, r20
     d2c:	ad 01       	movw	r20, r26
     d2e:	88 e0       	ldi	r24, 0x08	; 8
     d30:	ea 01       	movw	r28, r20
     d32:	09 90       	ld	r0, Y+
     d34:	ae 01       	movw	r20, r28
     d36:	e9 01       	movw	r28, r18
     d38:	09 92       	st	Y+, r0
     d3a:	9e 01       	movw	r18, r28
     d3c:	81 50       	subi	r24, 0x01	; 1
     d3e:	c1 f7       	brne	.-16     	; 0xd30 <_fpadd_parts+0x58>
     d40:	e2 01       	movw	r28, r4
     d42:	89 81       	ldd	r24, Y+1	; 0x01
     d44:	11 96       	adiw	r26, 0x01	; 1
     d46:	9c 91       	ld	r25, X
     d48:	89 23       	and	r24, r25
     d4a:	81 83       	std	Z+1, r24	; 0x01
     d4c:	08 c1       	rjmp	.+528    	; 0xf5e <_fpadd_parts+0x286>
     d4e:	92 30       	cpi	r25, 0x02	; 2
     d50:	09 f4       	brne	.+2      	; 0xd54 <_fpadd_parts+0x7c>
     d52:	07 c1       	rjmp	.+526    	; 0xf62 <_fpadd_parts+0x28a>
     d54:	12 96       	adiw	r26, 0x02	; 2
     d56:	2d 90       	ld	r2, X+
     d58:	3c 90       	ld	r3, X
     d5a:	13 97       	sbiw	r26, 0x03	; 3
     d5c:	eb 01       	movw	r28, r22
     d5e:	8a 81       	ldd	r24, Y+2	; 0x02
     d60:	9b 81       	ldd	r25, Y+3	; 0x03
     d62:	14 96       	adiw	r26, 0x04	; 4
     d64:	ad 90       	ld	r10, X+
     d66:	bd 90       	ld	r11, X+
     d68:	cd 90       	ld	r12, X+
     d6a:	dc 90       	ld	r13, X
     d6c:	17 97       	sbiw	r26, 0x07	; 7
     d6e:	ec 80       	ldd	r14, Y+4	; 0x04
     d70:	fd 80       	ldd	r15, Y+5	; 0x05
     d72:	0e 81       	ldd	r16, Y+6	; 0x06
     d74:	1f 81       	ldd	r17, Y+7	; 0x07
     d76:	91 01       	movw	r18, r2
     d78:	28 1b       	sub	r18, r24
     d7a:	39 0b       	sbc	r19, r25
     d7c:	b9 01       	movw	r22, r18
     d7e:	37 ff       	sbrs	r19, 7
     d80:	04 c0       	rjmp	.+8      	; 0xd8a <_fpadd_parts+0xb2>
     d82:	66 27       	eor	r22, r22
     d84:	77 27       	eor	r23, r23
     d86:	62 1b       	sub	r22, r18
     d88:	73 0b       	sbc	r23, r19
     d8a:	60 32       	cpi	r22, 0x20	; 32
     d8c:	71 05       	cpc	r23, r1
     d8e:	0c f0       	brlt	.+2      	; 0xd92 <_fpadd_parts+0xba>
     d90:	61 c0       	rjmp	.+194    	; 0xe54 <_fpadd_parts+0x17c>
     d92:	12 16       	cp	r1, r18
     d94:	13 06       	cpc	r1, r19
     d96:	6c f5       	brge	.+90     	; 0xdf2 <_fpadd_parts+0x11a>
     d98:	37 01       	movw	r6, r14
     d9a:	48 01       	movw	r8, r16
     d9c:	06 2e       	mov	r0, r22
     d9e:	04 c0       	rjmp	.+8      	; 0xda8 <_fpadd_parts+0xd0>
     da0:	96 94       	lsr	r9
     da2:	87 94       	ror	r8
     da4:	77 94       	ror	r7
     da6:	67 94       	ror	r6
     da8:	0a 94       	dec	r0
     daa:	d2 f7       	brpl	.-12     	; 0xda0 <_fpadd_parts+0xc8>
     dac:	21 e0       	ldi	r18, 0x01	; 1
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	40 e0       	ldi	r20, 0x00	; 0
     db2:	50 e0       	ldi	r21, 0x00	; 0
     db4:	04 c0       	rjmp	.+8      	; 0xdbe <_fpadd_parts+0xe6>
     db6:	22 0f       	add	r18, r18
     db8:	33 1f       	adc	r19, r19
     dba:	44 1f       	adc	r20, r20
     dbc:	55 1f       	adc	r21, r21
     dbe:	6a 95       	dec	r22
     dc0:	d2 f7       	brpl	.-12     	; 0xdb6 <_fpadd_parts+0xde>
     dc2:	21 50       	subi	r18, 0x01	; 1
     dc4:	30 40       	sbci	r19, 0x00	; 0
     dc6:	40 40       	sbci	r20, 0x00	; 0
     dc8:	50 40       	sbci	r21, 0x00	; 0
     dca:	2e 21       	and	r18, r14
     dcc:	3f 21       	and	r19, r15
     dce:	40 23       	and	r20, r16
     dd0:	51 23       	and	r21, r17
     dd2:	21 15       	cp	r18, r1
     dd4:	31 05       	cpc	r19, r1
     dd6:	41 05       	cpc	r20, r1
     dd8:	51 05       	cpc	r21, r1
     dda:	21 f0       	breq	.+8      	; 0xde4 <_fpadd_parts+0x10c>
     ddc:	21 e0       	ldi	r18, 0x01	; 1
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	40 e0       	ldi	r20, 0x00	; 0
     de2:	50 e0       	ldi	r21, 0x00	; 0
     de4:	79 01       	movw	r14, r18
     de6:	8a 01       	movw	r16, r20
     de8:	e6 28       	or	r14, r6
     dea:	f7 28       	or	r15, r7
     dec:	08 29       	or	r16, r8
     dee:	19 29       	or	r17, r9
     df0:	3c c0       	rjmp	.+120    	; 0xe6a <_fpadd_parts+0x192>
     df2:	23 2b       	or	r18, r19
     df4:	d1 f1       	breq	.+116    	; 0xe6a <_fpadd_parts+0x192>
     df6:	26 0e       	add	r2, r22
     df8:	37 1e       	adc	r3, r23
     dfa:	35 01       	movw	r6, r10
     dfc:	46 01       	movw	r8, r12
     dfe:	06 2e       	mov	r0, r22
     e00:	04 c0       	rjmp	.+8      	; 0xe0a <_fpadd_parts+0x132>
     e02:	96 94       	lsr	r9
     e04:	87 94       	ror	r8
     e06:	77 94       	ror	r7
     e08:	67 94       	ror	r6
     e0a:	0a 94       	dec	r0
     e0c:	d2 f7       	brpl	.-12     	; 0xe02 <_fpadd_parts+0x12a>
     e0e:	21 e0       	ldi	r18, 0x01	; 1
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e0       	ldi	r20, 0x00	; 0
     e14:	50 e0       	ldi	r21, 0x00	; 0
     e16:	04 c0       	rjmp	.+8      	; 0xe20 <_fpadd_parts+0x148>
     e18:	22 0f       	add	r18, r18
     e1a:	33 1f       	adc	r19, r19
     e1c:	44 1f       	adc	r20, r20
     e1e:	55 1f       	adc	r21, r21
     e20:	6a 95       	dec	r22
     e22:	d2 f7       	brpl	.-12     	; 0xe18 <_fpadd_parts+0x140>
     e24:	21 50       	subi	r18, 0x01	; 1
     e26:	30 40       	sbci	r19, 0x00	; 0
     e28:	40 40       	sbci	r20, 0x00	; 0
     e2a:	50 40       	sbci	r21, 0x00	; 0
     e2c:	2a 21       	and	r18, r10
     e2e:	3b 21       	and	r19, r11
     e30:	4c 21       	and	r20, r12
     e32:	5d 21       	and	r21, r13
     e34:	21 15       	cp	r18, r1
     e36:	31 05       	cpc	r19, r1
     e38:	41 05       	cpc	r20, r1
     e3a:	51 05       	cpc	r21, r1
     e3c:	21 f0       	breq	.+8      	; 0xe46 <_fpadd_parts+0x16e>
     e3e:	21 e0       	ldi	r18, 0x01	; 1
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	40 e0       	ldi	r20, 0x00	; 0
     e44:	50 e0       	ldi	r21, 0x00	; 0
     e46:	59 01       	movw	r10, r18
     e48:	6a 01       	movw	r12, r20
     e4a:	a6 28       	or	r10, r6
     e4c:	b7 28       	or	r11, r7
     e4e:	c8 28       	or	r12, r8
     e50:	d9 28       	or	r13, r9
     e52:	0b c0       	rjmp	.+22     	; 0xe6a <_fpadd_parts+0x192>
     e54:	82 15       	cp	r24, r2
     e56:	93 05       	cpc	r25, r3
     e58:	2c f0       	brlt	.+10     	; 0xe64 <_fpadd_parts+0x18c>
     e5a:	1c 01       	movw	r2, r24
     e5c:	aa 24       	eor	r10, r10
     e5e:	bb 24       	eor	r11, r11
     e60:	65 01       	movw	r12, r10
     e62:	03 c0       	rjmp	.+6      	; 0xe6a <_fpadd_parts+0x192>
     e64:	ee 24       	eor	r14, r14
     e66:	ff 24       	eor	r15, r15
     e68:	87 01       	movw	r16, r14
     e6a:	11 96       	adiw	r26, 0x01	; 1
     e6c:	9c 91       	ld	r25, X
     e6e:	d2 01       	movw	r26, r4
     e70:	11 96       	adiw	r26, 0x01	; 1
     e72:	8c 91       	ld	r24, X
     e74:	98 17       	cp	r25, r24
     e76:	09 f4       	brne	.+2      	; 0xe7a <_fpadd_parts+0x1a2>
     e78:	45 c0       	rjmp	.+138    	; 0xf04 <_fpadd_parts+0x22c>
     e7a:	99 23       	and	r25, r25
     e7c:	39 f0       	breq	.+14     	; 0xe8c <_fpadd_parts+0x1b4>
     e7e:	a8 01       	movw	r20, r16
     e80:	97 01       	movw	r18, r14
     e82:	2a 19       	sub	r18, r10
     e84:	3b 09       	sbc	r19, r11
     e86:	4c 09       	sbc	r20, r12
     e88:	5d 09       	sbc	r21, r13
     e8a:	06 c0       	rjmp	.+12     	; 0xe98 <_fpadd_parts+0x1c0>
     e8c:	a6 01       	movw	r20, r12
     e8e:	95 01       	movw	r18, r10
     e90:	2e 19       	sub	r18, r14
     e92:	3f 09       	sbc	r19, r15
     e94:	40 0b       	sbc	r20, r16
     e96:	51 0b       	sbc	r21, r17
     e98:	57 fd       	sbrc	r21, 7
     e9a:	08 c0       	rjmp	.+16     	; 0xeac <_fpadd_parts+0x1d4>
     e9c:	11 82       	std	Z+1, r1	; 0x01
     e9e:	33 82       	std	Z+3, r3	; 0x03
     ea0:	22 82       	std	Z+2, r2	; 0x02
     ea2:	24 83       	std	Z+4, r18	; 0x04
     ea4:	35 83       	std	Z+5, r19	; 0x05
     ea6:	46 83       	std	Z+6, r20	; 0x06
     ea8:	57 83       	std	Z+7, r21	; 0x07
     eaa:	1d c0       	rjmp	.+58     	; 0xee6 <_fpadd_parts+0x20e>
     eac:	81 e0       	ldi	r24, 0x01	; 1
     eae:	81 83       	std	Z+1, r24	; 0x01
     eb0:	33 82       	std	Z+3, r3	; 0x03
     eb2:	22 82       	std	Z+2, r2	; 0x02
     eb4:	88 27       	eor	r24, r24
     eb6:	99 27       	eor	r25, r25
     eb8:	dc 01       	movw	r26, r24
     eba:	82 1b       	sub	r24, r18
     ebc:	93 0b       	sbc	r25, r19
     ebe:	a4 0b       	sbc	r26, r20
     ec0:	b5 0b       	sbc	r27, r21
     ec2:	84 83       	std	Z+4, r24	; 0x04
     ec4:	95 83       	std	Z+5, r25	; 0x05
     ec6:	a6 83       	std	Z+6, r26	; 0x06
     ec8:	b7 83       	std	Z+7, r27	; 0x07
     eca:	0d c0       	rjmp	.+26     	; 0xee6 <_fpadd_parts+0x20e>
     ecc:	22 0f       	add	r18, r18
     ece:	33 1f       	adc	r19, r19
     ed0:	44 1f       	adc	r20, r20
     ed2:	55 1f       	adc	r21, r21
     ed4:	24 83       	std	Z+4, r18	; 0x04
     ed6:	35 83       	std	Z+5, r19	; 0x05
     ed8:	46 83       	std	Z+6, r20	; 0x06
     eda:	57 83       	std	Z+7, r21	; 0x07
     edc:	82 81       	ldd	r24, Z+2	; 0x02
     ede:	93 81       	ldd	r25, Z+3	; 0x03
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	93 83       	std	Z+3, r25	; 0x03
     ee4:	82 83       	std	Z+2, r24	; 0x02
     ee6:	24 81       	ldd	r18, Z+4	; 0x04
     ee8:	35 81       	ldd	r19, Z+5	; 0x05
     eea:	46 81       	ldd	r20, Z+6	; 0x06
     eec:	57 81       	ldd	r21, Z+7	; 0x07
     eee:	da 01       	movw	r26, r20
     ef0:	c9 01       	movw	r24, r18
     ef2:	01 97       	sbiw	r24, 0x01	; 1
     ef4:	a1 09       	sbc	r26, r1
     ef6:	b1 09       	sbc	r27, r1
     ef8:	8f 5f       	subi	r24, 0xFF	; 255
     efa:	9f 4f       	sbci	r25, 0xFF	; 255
     efc:	af 4f       	sbci	r26, 0xFF	; 255
     efe:	bf 43       	sbci	r27, 0x3F	; 63
     f00:	28 f3       	brcs	.-54     	; 0xecc <_fpadd_parts+0x1f4>
     f02:	0b c0       	rjmp	.+22     	; 0xf1a <_fpadd_parts+0x242>
     f04:	91 83       	std	Z+1, r25	; 0x01
     f06:	33 82       	std	Z+3, r3	; 0x03
     f08:	22 82       	std	Z+2, r2	; 0x02
     f0a:	ea 0c       	add	r14, r10
     f0c:	fb 1c       	adc	r15, r11
     f0e:	0c 1d       	adc	r16, r12
     f10:	1d 1d       	adc	r17, r13
     f12:	e4 82       	std	Z+4, r14	; 0x04
     f14:	f5 82       	std	Z+5, r15	; 0x05
     f16:	06 83       	std	Z+6, r16	; 0x06
     f18:	17 83       	std	Z+7, r17	; 0x07
     f1a:	83 e0       	ldi	r24, 0x03	; 3
     f1c:	80 83       	st	Z, r24
     f1e:	24 81       	ldd	r18, Z+4	; 0x04
     f20:	35 81       	ldd	r19, Z+5	; 0x05
     f22:	46 81       	ldd	r20, Z+6	; 0x06
     f24:	57 81       	ldd	r21, Z+7	; 0x07
     f26:	57 ff       	sbrs	r21, 7
     f28:	1a c0       	rjmp	.+52     	; 0xf5e <_fpadd_parts+0x286>
     f2a:	c9 01       	movw	r24, r18
     f2c:	aa 27       	eor	r26, r26
     f2e:	97 fd       	sbrc	r25, 7
     f30:	a0 95       	com	r26
     f32:	ba 2f       	mov	r27, r26
     f34:	81 70       	andi	r24, 0x01	; 1
     f36:	90 70       	andi	r25, 0x00	; 0
     f38:	a0 70       	andi	r26, 0x00	; 0
     f3a:	b0 70       	andi	r27, 0x00	; 0
     f3c:	56 95       	lsr	r21
     f3e:	47 95       	ror	r20
     f40:	37 95       	ror	r19
     f42:	27 95       	ror	r18
     f44:	82 2b       	or	r24, r18
     f46:	93 2b       	or	r25, r19
     f48:	a4 2b       	or	r26, r20
     f4a:	b5 2b       	or	r27, r21
     f4c:	84 83       	std	Z+4, r24	; 0x04
     f4e:	95 83       	std	Z+5, r25	; 0x05
     f50:	a6 83       	std	Z+6, r26	; 0x06
     f52:	b7 83       	std	Z+7, r27	; 0x07
     f54:	82 81       	ldd	r24, Z+2	; 0x02
     f56:	93 81       	ldd	r25, Z+3	; 0x03
     f58:	01 96       	adiw	r24, 0x01	; 1
     f5a:	93 83       	std	Z+3, r25	; 0x03
     f5c:	82 83       	std	Z+2, r24	; 0x02
     f5e:	df 01       	movw	r26, r30
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <_fpadd_parts+0x28c>
     f62:	d2 01       	movw	r26, r4
     f64:	cd 01       	movw	r24, r26
     f66:	cd b7       	in	r28, 0x3d	; 61
     f68:	de b7       	in	r29, 0x3e	; 62
     f6a:	e2 e1       	ldi	r30, 0x12	; 18
     f6c:	0c 94 b6 0b 	jmp	0x176c	; 0x176c <__epilogue_restores__>

00000f70 <__subsf3>:
     f70:	a0 e2       	ldi	r26, 0x20	; 32
     f72:	b0 e0       	ldi	r27, 0x00	; 0
     f74:	ee eb       	ldi	r30, 0xBE	; 190
     f76:	f7 e0       	ldi	r31, 0x07	; 7
     f78:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__prologue_saves__+0x18>
     f7c:	69 83       	std	Y+1, r22	; 0x01
     f7e:	7a 83       	std	Y+2, r23	; 0x02
     f80:	8b 83       	std	Y+3, r24	; 0x03
     f82:	9c 83       	std	Y+4, r25	; 0x04
     f84:	2d 83       	std	Y+5, r18	; 0x05
     f86:	3e 83       	std	Y+6, r19	; 0x06
     f88:	4f 83       	std	Y+7, r20	; 0x07
     f8a:	58 87       	std	Y+8, r21	; 0x08
     f8c:	e9 e0       	ldi	r30, 0x09	; 9
     f8e:	ee 2e       	mov	r14, r30
     f90:	f1 2c       	mov	r15, r1
     f92:	ec 0e       	add	r14, r28
     f94:	fd 1e       	adc	r15, r29
     f96:	ce 01       	movw	r24, r28
     f98:	01 96       	adiw	r24, 0x01	; 1
     f9a:	b7 01       	movw	r22, r14
     f9c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
     fa0:	8e 01       	movw	r16, r28
     fa2:	0f 5e       	subi	r16, 0xEF	; 239
     fa4:	1f 4f       	sbci	r17, 0xFF	; 255
     fa6:	ce 01       	movw	r24, r28
     fa8:	05 96       	adiw	r24, 0x05	; 5
     faa:	b8 01       	movw	r22, r16
     fac:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
     fb0:	8a 89       	ldd	r24, Y+18	; 0x12
     fb2:	91 e0       	ldi	r25, 0x01	; 1
     fb4:	89 27       	eor	r24, r25
     fb6:	8a 8b       	std	Y+18, r24	; 0x12
     fb8:	c7 01       	movw	r24, r14
     fba:	b8 01       	movw	r22, r16
     fbc:	ae 01       	movw	r20, r28
     fbe:	47 5e       	subi	r20, 0xE7	; 231
     fc0:	5f 4f       	sbci	r21, 0xFF	; 255
     fc2:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_fpadd_parts>
     fc6:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__pack_f>
     fca:	a0 96       	adiw	r28, 0x20	; 32
     fcc:	e6 e0       	ldi	r30, 0x06	; 6
     fce:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__epilogue_restores__+0x18>

00000fd2 <__addsf3>:
     fd2:	a0 e2       	ldi	r26, 0x20	; 32
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	ef ee       	ldi	r30, 0xEF	; 239
     fd8:	f7 e0       	ldi	r31, 0x07	; 7
     fda:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__prologue_saves__+0x18>
     fde:	69 83       	std	Y+1, r22	; 0x01
     fe0:	7a 83       	std	Y+2, r23	; 0x02
     fe2:	8b 83       	std	Y+3, r24	; 0x03
     fe4:	9c 83       	std	Y+4, r25	; 0x04
     fe6:	2d 83       	std	Y+5, r18	; 0x05
     fe8:	3e 83       	std	Y+6, r19	; 0x06
     fea:	4f 83       	std	Y+7, r20	; 0x07
     fec:	58 87       	std	Y+8, r21	; 0x08
     fee:	f9 e0       	ldi	r31, 0x09	; 9
     ff0:	ef 2e       	mov	r14, r31
     ff2:	f1 2c       	mov	r15, r1
     ff4:	ec 0e       	add	r14, r28
     ff6:	fd 1e       	adc	r15, r29
     ff8:	ce 01       	movw	r24, r28
     ffa:	01 96       	adiw	r24, 0x01	; 1
     ffc:	b7 01       	movw	r22, r14
     ffe:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1002:	8e 01       	movw	r16, r28
    1004:	0f 5e       	subi	r16, 0xEF	; 239
    1006:	1f 4f       	sbci	r17, 0xFF	; 255
    1008:	ce 01       	movw	r24, r28
    100a:	05 96       	adiw	r24, 0x05	; 5
    100c:	b8 01       	movw	r22, r16
    100e:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1012:	c7 01       	movw	r24, r14
    1014:	b8 01       	movw	r22, r16
    1016:	ae 01       	movw	r20, r28
    1018:	47 5e       	subi	r20, 0xE7	; 231
    101a:	5f 4f       	sbci	r21, 0xFF	; 255
    101c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_fpadd_parts>
    1020:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__pack_f>
    1024:	a0 96       	adiw	r28, 0x20	; 32
    1026:	e6 e0       	ldi	r30, 0x06	; 6
    1028:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__epilogue_restores__+0x18>

0000102c <__mulsf3>:
    102c:	a0 e2       	ldi	r26, 0x20	; 32
    102e:	b0 e0       	ldi	r27, 0x00	; 0
    1030:	ec e1       	ldi	r30, 0x1C	; 28
    1032:	f8 e0       	ldi	r31, 0x08	; 8
    1034:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <__prologue_saves__>
    1038:	69 83       	std	Y+1, r22	; 0x01
    103a:	7a 83       	std	Y+2, r23	; 0x02
    103c:	8b 83       	std	Y+3, r24	; 0x03
    103e:	9c 83       	std	Y+4, r25	; 0x04
    1040:	2d 83       	std	Y+5, r18	; 0x05
    1042:	3e 83       	std	Y+6, r19	; 0x06
    1044:	4f 83       	std	Y+7, r20	; 0x07
    1046:	58 87       	std	Y+8, r21	; 0x08
    1048:	ce 01       	movw	r24, r28
    104a:	01 96       	adiw	r24, 0x01	; 1
    104c:	be 01       	movw	r22, r28
    104e:	67 5f       	subi	r22, 0xF7	; 247
    1050:	7f 4f       	sbci	r23, 0xFF	; 255
    1052:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1056:	ce 01       	movw	r24, r28
    1058:	05 96       	adiw	r24, 0x05	; 5
    105a:	be 01       	movw	r22, r28
    105c:	6f 5e       	subi	r22, 0xEF	; 239
    105e:	7f 4f       	sbci	r23, 0xFF	; 255
    1060:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1064:	99 85       	ldd	r25, Y+9	; 0x09
    1066:	92 30       	cpi	r25, 0x02	; 2
    1068:	88 f0       	brcs	.+34     	; 0x108c <__mulsf3+0x60>
    106a:	89 89       	ldd	r24, Y+17	; 0x11
    106c:	82 30       	cpi	r24, 0x02	; 2
    106e:	c8 f0       	brcs	.+50     	; 0x10a2 <__mulsf3+0x76>
    1070:	94 30       	cpi	r25, 0x04	; 4
    1072:	19 f4       	brne	.+6      	; 0x107a <__mulsf3+0x4e>
    1074:	82 30       	cpi	r24, 0x02	; 2
    1076:	51 f4       	brne	.+20     	; 0x108c <__mulsf3+0x60>
    1078:	04 c0       	rjmp	.+8      	; 0x1082 <__mulsf3+0x56>
    107a:	84 30       	cpi	r24, 0x04	; 4
    107c:	29 f4       	brne	.+10     	; 0x1088 <__mulsf3+0x5c>
    107e:	92 30       	cpi	r25, 0x02	; 2
    1080:	81 f4       	brne	.+32     	; 0x10a2 <__mulsf3+0x76>
    1082:	8f e0       	ldi	r24, 0x0F	; 15
    1084:	91 e0       	ldi	r25, 0x01	; 1
    1086:	c6 c0       	rjmp	.+396    	; 0x1214 <__stack+0x115>
    1088:	92 30       	cpi	r25, 0x02	; 2
    108a:	49 f4       	brne	.+18     	; 0x109e <__mulsf3+0x72>
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1090:	8a 89       	ldd	r24, Y+18	; 0x12
    1092:	98 13       	cpse	r25, r24
    1094:	21 e0       	ldi	r18, 0x01	; 1
    1096:	2a 87       	std	Y+10, r18	; 0x0a
    1098:	ce 01       	movw	r24, r28
    109a:	09 96       	adiw	r24, 0x09	; 9
    109c:	bb c0       	rjmp	.+374    	; 0x1214 <__stack+0x115>
    109e:	82 30       	cpi	r24, 0x02	; 2
    10a0:	49 f4       	brne	.+18     	; 0x10b4 <__mulsf3+0x88>
    10a2:	20 e0       	ldi	r18, 0x00	; 0
    10a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    10a6:	8a 89       	ldd	r24, Y+18	; 0x12
    10a8:	98 13       	cpse	r25, r24
    10aa:	21 e0       	ldi	r18, 0x01	; 1
    10ac:	2a 8b       	std	Y+18, r18	; 0x12
    10ae:	ce 01       	movw	r24, r28
    10b0:	41 96       	adiw	r24, 0x11	; 17
    10b2:	b0 c0       	rjmp	.+352    	; 0x1214 <__stack+0x115>
    10b4:	2d 84       	ldd	r2, Y+13	; 0x0d
    10b6:	3e 84       	ldd	r3, Y+14	; 0x0e
    10b8:	4f 84       	ldd	r4, Y+15	; 0x0f
    10ba:	58 88       	ldd	r5, Y+16	; 0x10
    10bc:	6d 88       	ldd	r6, Y+21	; 0x15
    10be:	7e 88       	ldd	r7, Y+22	; 0x16
    10c0:	8f 88       	ldd	r8, Y+23	; 0x17
    10c2:	98 8c       	ldd	r9, Y+24	; 0x18
    10c4:	ee 24       	eor	r14, r14
    10c6:	ff 24       	eor	r15, r15
    10c8:	87 01       	movw	r16, r14
    10ca:	aa 24       	eor	r10, r10
    10cc:	bb 24       	eor	r11, r11
    10ce:	65 01       	movw	r12, r10
    10d0:	40 e0       	ldi	r20, 0x00	; 0
    10d2:	50 e0       	ldi	r21, 0x00	; 0
    10d4:	60 e0       	ldi	r22, 0x00	; 0
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	e0 e0       	ldi	r30, 0x00	; 0
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	c1 01       	movw	r24, r2
    10de:	81 70       	andi	r24, 0x01	; 1
    10e0:	90 70       	andi	r25, 0x00	; 0
    10e2:	89 2b       	or	r24, r25
    10e4:	e9 f0       	breq	.+58     	; 0x1120 <__stack+0x21>
    10e6:	e6 0c       	add	r14, r6
    10e8:	f7 1c       	adc	r15, r7
    10ea:	08 1d       	adc	r16, r8
    10ec:	19 1d       	adc	r17, r9
    10ee:	9a 01       	movw	r18, r20
    10f0:	ab 01       	movw	r20, r22
    10f2:	2a 0d       	add	r18, r10
    10f4:	3b 1d       	adc	r19, r11
    10f6:	4c 1d       	adc	r20, r12
    10f8:	5d 1d       	adc	r21, r13
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	a0 e0       	ldi	r26, 0x00	; 0
    1100:	b0 e0       	ldi	r27, 0x00	; 0
    1102:	e6 14       	cp	r14, r6
    1104:	f7 04       	cpc	r15, r7
    1106:	08 05       	cpc	r16, r8
    1108:	19 05       	cpc	r17, r9
    110a:	20 f4       	brcc	.+8      	; 0x1114 <__stack+0x15>
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	a0 e0       	ldi	r26, 0x00	; 0
    1112:	b0 e0       	ldi	r27, 0x00	; 0
    1114:	ba 01       	movw	r22, r20
    1116:	a9 01       	movw	r20, r18
    1118:	48 0f       	add	r20, r24
    111a:	59 1f       	adc	r21, r25
    111c:	6a 1f       	adc	r22, r26
    111e:	7b 1f       	adc	r23, r27
    1120:	aa 0c       	add	r10, r10
    1122:	bb 1c       	adc	r11, r11
    1124:	cc 1c       	adc	r12, r12
    1126:	dd 1c       	adc	r13, r13
    1128:	97 fe       	sbrs	r9, 7
    112a:	08 c0       	rjmp	.+16     	; 0x113c <__stack+0x3d>
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	a0 e0       	ldi	r26, 0x00	; 0
    1132:	b0 e0       	ldi	r27, 0x00	; 0
    1134:	a8 2a       	or	r10, r24
    1136:	b9 2a       	or	r11, r25
    1138:	ca 2a       	or	r12, r26
    113a:	db 2a       	or	r13, r27
    113c:	31 96       	adiw	r30, 0x01	; 1
    113e:	e0 32       	cpi	r30, 0x20	; 32
    1140:	f1 05       	cpc	r31, r1
    1142:	49 f0       	breq	.+18     	; 0x1156 <__stack+0x57>
    1144:	66 0c       	add	r6, r6
    1146:	77 1c       	adc	r7, r7
    1148:	88 1c       	adc	r8, r8
    114a:	99 1c       	adc	r9, r9
    114c:	56 94       	lsr	r5
    114e:	47 94       	ror	r4
    1150:	37 94       	ror	r3
    1152:	27 94       	ror	r2
    1154:	c3 cf       	rjmp	.-122    	; 0x10dc <__mulsf3+0xb0>
    1156:	fa 85       	ldd	r31, Y+10	; 0x0a
    1158:	ea 89       	ldd	r30, Y+18	; 0x12
    115a:	2b 89       	ldd	r18, Y+19	; 0x13
    115c:	3c 89       	ldd	r19, Y+20	; 0x14
    115e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1160:	9c 85       	ldd	r25, Y+12	; 0x0c
    1162:	28 0f       	add	r18, r24
    1164:	39 1f       	adc	r19, r25
    1166:	2e 5f       	subi	r18, 0xFE	; 254
    1168:	3f 4f       	sbci	r19, 0xFF	; 255
    116a:	17 c0       	rjmp	.+46     	; 0x119a <__stack+0x9b>
    116c:	ca 01       	movw	r24, r20
    116e:	81 70       	andi	r24, 0x01	; 1
    1170:	90 70       	andi	r25, 0x00	; 0
    1172:	89 2b       	or	r24, r25
    1174:	61 f0       	breq	.+24     	; 0x118e <__stack+0x8f>
    1176:	16 95       	lsr	r17
    1178:	07 95       	ror	r16
    117a:	f7 94       	ror	r15
    117c:	e7 94       	ror	r14
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	a0 e0       	ldi	r26, 0x00	; 0
    1184:	b0 e8       	ldi	r27, 0x80	; 128
    1186:	e8 2a       	or	r14, r24
    1188:	f9 2a       	or	r15, r25
    118a:	0a 2b       	or	r16, r26
    118c:	1b 2b       	or	r17, r27
    118e:	76 95       	lsr	r23
    1190:	67 95       	ror	r22
    1192:	57 95       	ror	r21
    1194:	47 95       	ror	r20
    1196:	2f 5f       	subi	r18, 0xFF	; 255
    1198:	3f 4f       	sbci	r19, 0xFF	; 255
    119a:	77 fd       	sbrc	r23, 7
    119c:	e7 cf       	rjmp	.-50     	; 0x116c <__stack+0x6d>
    119e:	0c c0       	rjmp	.+24     	; 0x11b8 <__stack+0xb9>
    11a0:	44 0f       	add	r20, r20
    11a2:	55 1f       	adc	r21, r21
    11a4:	66 1f       	adc	r22, r22
    11a6:	77 1f       	adc	r23, r23
    11a8:	17 fd       	sbrc	r17, 7
    11aa:	41 60       	ori	r20, 0x01	; 1
    11ac:	ee 0c       	add	r14, r14
    11ae:	ff 1c       	adc	r15, r15
    11b0:	00 1f       	adc	r16, r16
    11b2:	11 1f       	adc	r17, r17
    11b4:	21 50       	subi	r18, 0x01	; 1
    11b6:	30 40       	sbci	r19, 0x00	; 0
    11b8:	40 30       	cpi	r20, 0x00	; 0
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	59 07       	cpc	r21, r25
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	69 07       	cpc	r22, r25
    11c2:	90 e4       	ldi	r25, 0x40	; 64
    11c4:	79 07       	cpc	r23, r25
    11c6:	60 f3       	brcs	.-40     	; 0x11a0 <__stack+0xa1>
    11c8:	2b 8f       	std	Y+27, r18	; 0x1b
    11ca:	3c 8f       	std	Y+28, r19	; 0x1c
    11cc:	db 01       	movw	r26, r22
    11ce:	ca 01       	movw	r24, r20
    11d0:	8f 77       	andi	r24, 0x7F	; 127
    11d2:	90 70       	andi	r25, 0x00	; 0
    11d4:	a0 70       	andi	r26, 0x00	; 0
    11d6:	b0 70       	andi	r27, 0x00	; 0
    11d8:	80 34       	cpi	r24, 0x40	; 64
    11da:	91 05       	cpc	r25, r1
    11dc:	a1 05       	cpc	r26, r1
    11de:	b1 05       	cpc	r27, r1
    11e0:	61 f4       	brne	.+24     	; 0x11fa <__stack+0xfb>
    11e2:	47 fd       	sbrc	r20, 7
    11e4:	0a c0       	rjmp	.+20     	; 0x11fa <__stack+0xfb>
    11e6:	e1 14       	cp	r14, r1
    11e8:	f1 04       	cpc	r15, r1
    11ea:	01 05       	cpc	r16, r1
    11ec:	11 05       	cpc	r17, r1
    11ee:	29 f0       	breq	.+10     	; 0x11fa <__stack+0xfb>
    11f0:	40 5c       	subi	r20, 0xC0	; 192
    11f2:	5f 4f       	sbci	r21, 0xFF	; 255
    11f4:	6f 4f       	sbci	r22, 0xFF	; 255
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	40 78       	andi	r20, 0x80	; 128
    11fa:	1a 8e       	std	Y+26, r1	; 0x1a
    11fc:	fe 17       	cp	r31, r30
    11fe:	11 f0       	breq	.+4      	; 0x1204 <__stack+0x105>
    1200:	81 e0       	ldi	r24, 0x01	; 1
    1202:	8a 8f       	std	Y+26, r24	; 0x1a
    1204:	4d 8f       	std	Y+29, r20	; 0x1d
    1206:	5e 8f       	std	Y+30, r21	; 0x1e
    1208:	6f 8f       	std	Y+31, r22	; 0x1f
    120a:	78 a3       	std	Y+32, r23	; 0x20
    120c:	83 e0       	ldi	r24, 0x03	; 3
    120e:	89 8f       	std	Y+25, r24	; 0x19
    1210:	ce 01       	movw	r24, r28
    1212:	49 96       	adiw	r24, 0x19	; 25
    1214:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__pack_f>
    1218:	a0 96       	adiw	r28, 0x20	; 32
    121a:	e2 e1       	ldi	r30, 0x12	; 18
    121c:	0c 94 b6 0b 	jmp	0x176c	; 0x176c <__epilogue_restores__>

00001220 <__gtsf2>:
    1220:	a8 e1       	ldi	r26, 0x18	; 24
    1222:	b0 e0       	ldi	r27, 0x00	; 0
    1224:	e6 e1       	ldi	r30, 0x16	; 22
    1226:	f9 e0       	ldi	r31, 0x09	; 9
    1228:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__prologue_saves__+0x18>
    122c:	69 83       	std	Y+1, r22	; 0x01
    122e:	7a 83       	std	Y+2, r23	; 0x02
    1230:	8b 83       	std	Y+3, r24	; 0x03
    1232:	9c 83       	std	Y+4, r25	; 0x04
    1234:	2d 83       	std	Y+5, r18	; 0x05
    1236:	3e 83       	std	Y+6, r19	; 0x06
    1238:	4f 83       	std	Y+7, r20	; 0x07
    123a:	58 87       	std	Y+8, r21	; 0x08
    123c:	89 e0       	ldi	r24, 0x09	; 9
    123e:	e8 2e       	mov	r14, r24
    1240:	f1 2c       	mov	r15, r1
    1242:	ec 0e       	add	r14, r28
    1244:	fd 1e       	adc	r15, r29
    1246:	ce 01       	movw	r24, r28
    1248:	01 96       	adiw	r24, 0x01	; 1
    124a:	b7 01       	movw	r22, r14
    124c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1250:	8e 01       	movw	r16, r28
    1252:	0f 5e       	subi	r16, 0xEF	; 239
    1254:	1f 4f       	sbci	r17, 0xFF	; 255
    1256:	ce 01       	movw	r24, r28
    1258:	05 96       	adiw	r24, 0x05	; 5
    125a:	b8 01       	movw	r22, r16
    125c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1260:	89 85       	ldd	r24, Y+9	; 0x09
    1262:	82 30       	cpi	r24, 0x02	; 2
    1264:	40 f0       	brcs	.+16     	; 0x1276 <__gtsf2+0x56>
    1266:	89 89       	ldd	r24, Y+17	; 0x11
    1268:	82 30       	cpi	r24, 0x02	; 2
    126a:	28 f0       	brcs	.+10     	; 0x1276 <__gtsf2+0x56>
    126c:	c7 01       	movw	r24, r14
    126e:	b8 01       	movw	r22, r16
    1270:	0e 94 41 0b 	call	0x1682	; 0x1682 <__fpcmp_parts_f>
    1274:	01 c0       	rjmp	.+2      	; 0x1278 <__gtsf2+0x58>
    1276:	8f ef       	ldi	r24, 0xFF	; 255
    1278:	68 96       	adiw	r28, 0x18	; 24
    127a:	e6 e0       	ldi	r30, 0x06	; 6
    127c:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__epilogue_restores__+0x18>

00001280 <__gesf2>:
    1280:	a8 e1       	ldi	r26, 0x18	; 24
    1282:	b0 e0       	ldi	r27, 0x00	; 0
    1284:	e6 e4       	ldi	r30, 0x46	; 70
    1286:	f9 e0       	ldi	r31, 0x09	; 9
    1288:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__prologue_saves__+0x18>
    128c:	69 83       	std	Y+1, r22	; 0x01
    128e:	7a 83       	std	Y+2, r23	; 0x02
    1290:	8b 83       	std	Y+3, r24	; 0x03
    1292:	9c 83       	std	Y+4, r25	; 0x04
    1294:	2d 83       	std	Y+5, r18	; 0x05
    1296:	3e 83       	std	Y+6, r19	; 0x06
    1298:	4f 83       	std	Y+7, r20	; 0x07
    129a:	58 87       	std	Y+8, r21	; 0x08
    129c:	89 e0       	ldi	r24, 0x09	; 9
    129e:	e8 2e       	mov	r14, r24
    12a0:	f1 2c       	mov	r15, r1
    12a2:	ec 0e       	add	r14, r28
    12a4:	fd 1e       	adc	r15, r29
    12a6:	ce 01       	movw	r24, r28
    12a8:	01 96       	adiw	r24, 0x01	; 1
    12aa:	b7 01       	movw	r22, r14
    12ac:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    12b0:	8e 01       	movw	r16, r28
    12b2:	0f 5e       	subi	r16, 0xEF	; 239
    12b4:	1f 4f       	sbci	r17, 0xFF	; 255
    12b6:	ce 01       	movw	r24, r28
    12b8:	05 96       	adiw	r24, 0x05	; 5
    12ba:	b8 01       	movw	r22, r16
    12bc:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    12c0:	89 85       	ldd	r24, Y+9	; 0x09
    12c2:	82 30       	cpi	r24, 0x02	; 2
    12c4:	40 f0       	brcs	.+16     	; 0x12d6 <__gesf2+0x56>
    12c6:	89 89       	ldd	r24, Y+17	; 0x11
    12c8:	82 30       	cpi	r24, 0x02	; 2
    12ca:	28 f0       	brcs	.+10     	; 0x12d6 <__gesf2+0x56>
    12cc:	c7 01       	movw	r24, r14
    12ce:	b8 01       	movw	r22, r16
    12d0:	0e 94 41 0b 	call	0x1682	; 0x1682 <__fpcmp_parts_f>
    12d4:	01 c0       	rjmp	.+2      	; 0x12d8 <__gesf2+0x58>
    12d6:	8f ef       	ldi	r24, 0xFF	; 255
    12d8:	68 96       	adiw	r28, 0x18	; 24
    12da:	e6 e0       	ldi	r30, 0x06	; 6
    12dc:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__epilogue_restores__+0x18>

000012e0 <__ltsf2>:
    12e0:	a8 e1       	ldi	r26, 0x18	; 24
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
    12e4:	e6 e7       	ldi	r30, 0x76	; 118
    12e6:	f9 e0       	ldi	r31, 0x09	; 9
    12e8:	0c 94 a6 0b 	jmp	0x174c	; 0x174c <__prologue_saves__+0x18>
    12ec:	69 83       	std	Y+1, r22	; 0x01
    12ee:	7a 83       	std	Y+2, r23	; 0x02
    12f0:	8b 83       	std	Y+3, r24	; 0x03
    12f2:	9c 83       	std	Y+4, r25	; 0x04
    12f4:	2d 83       	std	Y+5, r18	; 0x05
    12f6:	3e 83       	std	Y+6, r19	; 0x06
    12f8:	4f 83       	std	Y+7, r20	; 0x07
    12fa:	58 87       	std	Y+8, r21	; 0x08
    12fc:	89 e0       	ldi	r24, 0x09	; 9
    12fe:	e8 2e       	mov	r14, r24
    1300:	f1 2c       	mov	r15, r1
    1302:	ec 0e       	add	r14, r28
    1304:	fd 1e       	adc	r15, r29
    1306:	ce 01       	movw	r24, r28
    1308:	01 96       	adiw	r24, 0x01	; 1
    130a:	b7 01       	movw	r22, r14
    130c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1310:	8e 01       	movw	r16, r28
    1312:	0f 5e       	subi	r16, 0xEF	; 239
    1314:	1f 4f       	sbci	r17, 0xFF	; 255
    1316:	ce 01       	movw	r24, r28
    1318:	05 96       	adiw	r24, 0x05	; 5
    131a:	b8 01       	movw	r22, r16
    131c:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1320:	89 85       	ldd	r24, Y+9	; 0x09
    1322:	82 30       	cpi	r24, 0x02	; 2
    1324:	40 f0       	brcs	.+16     	; 0x1336 <__ltsf2+0x56>
    1326:	89 89       	ldd	r24, Y+17	; 0x11
    1328:	82 30       	cpi	r24, 0x02	; 2
    132a:	28 f0       	brcs	.+10     	; 0x1336 <__ltsf2+0x56>
    132c:	c7 01       	movw	r24, r14
    132e:	b8 01       	movw	r22, r16
    1330:	0e 94 41 0b 	call	0x1682	; 0x1682 <__fpcmp_parts_f>
    1334:	01 c0       	rjmp	.+2      	; 0x1338 <__ltsf2+0x58>
    1336:	81 e0       	ldi	r24, 0x01	; 1
    1338:	68 96       	adiw	r28, 0x18	; 24
    133a:	e6 e0       	ldi	r30, 0x06	; 6
    133c:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__epilogue_restores__+0x18>

00001340 <__fixsfsi>:
    1340:	ac e0       	ldi	r26, 0x0C	; 12
    1342:	b0 e0       	ldi	r27, 0x00	; 0
    1344:	e6 ea       	ldi	r30, 0xA6	; 166
    1346:	f9 e0       	ldi	r31, 0x09	; 9
    1348:	0c 94 aa 0b 	jmp	0x1754	; 0x1754 <__prologue_saves__+0x20>
    134c:	69 83       	std	Y+1, r22	; 0x01
    134e:	7a 83       	std	Y+2, r23	; 0x02
    1350:	8b 83       	std	Y+3, r24	; 0x03
    1352:	9c 83       	std	Y+4, r25	; 0x04
    1354:	ce 01       	movw	r24, r28
    1356:	01 96       	adiw	r24, 0x01	; 1
    1358:	be 01       	movw	r22, r28
    135a:	6b 5f       	subi	r22, 0xFB	; 251
    135c:	7f 4f       	sbci	r23, 0xFF	; 255
    135e:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__unpack_f>
    1362:	8d 81       	ldd	r24, Y+5	; 0x05
    1364:	82 30       	cpi	r24, 0x02	; 2
    1366:	61 f1       	breq	.+88     	; 0x13c0 <__fixsfsi+0x80>
    1368:	82 30       	cpi	r24, 0x02	; 2
    136a:	50 f1       	brcs	.+84     	; 0x13c0 <__fixsfsi+0x80>
    136c:	84 30       	cpi	r24, 0x04	; 4
    136e:	21 f4       	brne	.+8      	; 0x1378 <__fixsfsi+0x38>
    1370:	8e 81       	ldd	r24, Y+6	; 0x06
    1372:	88 23       	and	r24, r24
    1374:	51 f1       	breq	.+84     	; 0x13ca <__fixsfsi+0x8a>
    1376:	2e c0       	rjmp	.+92     	; 0x13d4 <__fixsfsi+0x94>
    1378:	2f 81       	ldd	r18, Y+7	; 0x07
    137a:	38 85       	ldd	r19, Y+8	; 0x08
    137c:	37 fd       	sbrc	r19, 7
    137e:	20 c0       	rjmp	.+64     	; 0x13c0 <__fixsfsi+0x80>
    1380:	6e 81       	ldd	r22, Y+6	; 0x06
    1382:	2f 31       	cpi	r18, 0x1F	; 31
    1384:	31 05       	cpc	r19, r1
    1386:	1c f0       	brlt	.+6      	; 0x138e <__fixsfsi+0x4e>
    1388:	66 23       	and	r22, r22
    138a:	f9 f0       	breq	.+62     	; 0x13ca <__fixsfsi+0x8a>
    138c:	23 c0       	rjmp	.+70     	; 0x13d4 <__fixsfsi+0x94>
    138e:	8e e1       	ldi	r24, 0x1E	; 30
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	82 1b       	sub	r24, r18
    1394:	93 0b       	sbc	r25, r19
    1396:	29 85       	ldd	r18, Y+9	; 0x09
    1398:	3a 85       	ldd	r19, Y+10	; 0x0a
    139a:	4b 85       	ldd	r20, Y+11	; 0x0b
    139c:	5c 85       	ldd	r21, Y+12	; 0x0c
    139e:	04 c0       	rjmp	.+8      	; 0x13a8 <__fixsfsi+0x68>
    13a0:	56 95       	lsr	r21
    13a2:	47 95       	ror	r20
    13a4:	37 95       	ror	r19
    13a6:	27 95       	ror	r18
    13a8:	8a 95       	dec	r24
    13aa:	d2 f7       	brpl	.-12     	; 0x13a0 <__fixsfsi+0x60>
    13ac:	66 23       	and	r22, r22
    13ae:	b1 f0       	breq	.+44     	; 0x13dc <__fixsfsi+0x9c>
    13b0:	50 95       	com	r21
    13b2:	40 95       	com	r20
    13b4:	30 95       	com	r19
    13b6:	21 95       	neg	r18
    13b8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ba:	4f 4f       	sbci	r20, 0xFF	; 255
    13bc:	5f 4f       	sbci	r21, 0xFF	; 255
    13be:	0e c0       	rjmp	.+28     	; 0x13dc <__fixsfsi+0x9c>
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	40 e0       	ldi	r20, 0x00	; 0
    13c6:	50 e0       	ldi	r21, 0x00	; 0
    13c8:	09 c0       	rjmp	.+18     	; 0x13dc <__fixsfsi+0x9c>
    13ca:	2f ef       	ldi	r18, 0xFF	; 255
    13cc:	3f ef       	ldi	r19, 0xFF	; 255
    13ce:	4f ef       	ldi	r20, 0xFF	; 255
    13d0:	5f e7       	ldi	r21, 0x7F	; 127
    13d2:	04 c0       	rjmp	.+8      	; 0x13dc <__fixsfsi+0x9c>
    13d4:	20 e0       	ldi	r18, 0x00	; 0
    13d6:	30 e0       	ldi	r19, 0x00	; 0
    13d8:	40 e0       	ldi	r20, 0x00	; 0
    13da:	50 e8       	ldi	r21, 0x80	; 128
    13dc:	b9 01       	movw	r22, r18
    13de:	ca 01       	movw	r24, r20
    13e0:	2c 96       	adiw	r28, 0x0c	; 12
    13e2:	e2 e0       	ldi	r30, 0x02	; 2
    13e4:	0c 94 c6 0b 	jmp	0x178c	; 0x178c <__epilogue_restores__+0x20>

000013e8 <__pack_f>:
    13e8:	df 92       	push	r13
    13ea:	ef 92       	push	r14
    13ec:	ff 92       	push	r15
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	fc 01       	movw	r30, r24
    13f4:	e4 80       	ldd	r14, Z+4	; 0x04
    13f6:	f5 80       	ldd	r15, Z+5	; 0x05
    13f8:	06 81       	ldd	r16, Z+6	; 0x06
    13fa:	17 81       	ldd	r17, Z+7	; 0x07
    13fc:	d1 80       	ldd	r13, Z+1	; 0x01
    13fe:	80 81       	ld	r24, Z
    1400:	82 30       	cpi	r24, 0x02	; 2
    1402:	48 f4       	brcc	.+18     	; 0x1416 <__pack_f+0x2e>
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	a0 e1       	ldi	r26, 0x10	; 16
    140a:	b0 e0       	ldi	r27, 0x00	; 0
    140c:	e8 2a       	or	r14, r24
    140e:	f9 2a       	or	r15, r25
    1410:	0a 2b       	or	r16, r26
    1412:	1b 2b       	or	r17, r27
    1414:	a5 c0       	rjmp	.+330    	; 0x1560 <__pack_f+0x178>
    1416:	84 30       	cpi	r24, 0x04	; 4
    1418:	09 f4       	brne	.+2      	; 0x141c <__pack_f+0x34>
    141a:	9f c0       	rjmp	.+318    	; 0x155a <__pack_f+0x172>
    141c:	82 30       	cpi	r24, 0x02	; 2
    141e:	21 f4       	brne	.+8      	; 0x1428 <__pack_f+0x40>
    1420:	ee 24       	eor	r14, r14
    1422:	ff 24       	eor	r15, r15
    1424:	87 01       	movw	r16, r14
    1426:	05 c0       	rjmp	.+10     	; 0x1432 <__pack_f+0x4a>
    1428:	e1 14       	cp	r14, r1
    142a:	f1 04       	cpc	r15, r1
    142c:	01 05       	cpc	r16, r1
    142e:	11 05       	cpc	r17, r1
    1430:	19 f4       	brne	.+6      	; 0x1438 <__pack_f+0x50>
    1432:	e0 e0       	ldi	r30, 0x00	; 0
    1434:	f0 e0       	ldi	r31, 0x00	; 0
    1436:	96 c0       	rjmp	.+300    	; 0x1564 <__pack_f+0x17c>
    1438:	62 81       	ldd	r22, Z+2	; 0x02
    143a:	73 81       	ldd	r23, Z+3	; 0x03
    143c:	9f ef       	ldi	r25, 0xFF	; 255
    143e:	62 38       	cpi	r22, 0x82	; 130
    1440:	79 07       	cpc	r23, r25
    1442:	0c f0       	brlt	.+2      	; 0x1446 <__pack_f+0x5e>
    1444:	5b c0       	rjmp	.+182    	; 0x14fc <__pack_f+0x114>
    1446:	22 e8       	ldi	r18, 0x82	; 130
    1448:	3f ef       	ldi	r19, 0xFF	; 255
    144a:	26 1b       	sub	r18, r22
    144c:	37 0b       	sbc	r19, r23
    144e:	2a 31       	cpi	r18, 0x1A	; 26
    1450:	31 05       	cpc	r19, r1
    1452:	2c f0       	brlt	.+10     	; 0x145e <__pack_f+0x76>
    1454:	20 e0       	ldi	r18, 0x00	; 0
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	40 e0       	ldi	r20, 0x00	; 0
    145a:	50 e0       	ldi	r21, 0x00	; 0
    145c:	2a c0       	rjmp	.+84     	; 0x14b2 <__pack_f+0xca>
    145e:	b8 01       	movw	r22, r16
    1460:	a7 01       	movw	r20, r14
    1462:	02 2e       	mov	r0, r18
    1464:	04 c0       	rjmp	.+8      	; 0x146e <__pack_f+0x86>
    1466:	76 95       	lsr	r23
    1468:	67 95       	ror	r22
    146a:	57 95       	ror	r21
    146c:	47 95       	ror	r20
    146e:	0a 94       	dec	r0
    1470:	d2 f7       	brpl	.-12     	; 0x1466 <__pack_f+0x7e>
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	a0 e0       	ldi	r26, 0x00	; 0
    1478:	b0 e0       	ldi	r27, 0x00	; 0
    147a:	04 c0       	rjmp	.+8      	; 0x1484 <__pack_f+0x9c>
    147c:	88 0f       	add	r24, r24
    147e:	99 1f       	adc	r25, r25
    1480:	aa 1f       	adc	r26, r26
    1482:	bb 1f       	adc	r27, r27
    1484:	2a 95       	dec	r18
    1486:	d2 f7       	brpl	.-12     	; 0x147c <__pack_f+0x94>
    1488:	01 97       	sbiw	r24, 0x01	; 1
    148a:	a1 09       	sbc	r26, r1
    148c:	b1 09       	sbc	r27, r1
    148e:	8e 21       	and	r24, r14
    1490:	9f 21       	and	r25, r15
    1492:	a0 23       	and	r26, r16
    1494:	b1 23       	and	r27, r17
    1496:	00 97       	sbiw	r24, 0x00	; 0
    1498:	a1 05       	cpc	r26, r1
    149a:	b1 05       	cpc	r27, r1
    149c:	21 f0       	breq	.+8      	; 0x14a6 <__pack_f+0xbe>
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	a0 e0       	ldi	r26, 0x00	; 0
    14a4:	b0 e0       	ldi	r27, 0x00	; 0
    14a6:	9a 01       	movw	r18, r20
    14a8:	ab 01       	movw	r20, r22
    14aa:	28 2b       	or	r18, r24
    14ac:	39 2b       	or	r19, r25
    14ae:	4a 2b       	or	r20, r26
    14b0:	5b 2b       	or	r21, r27
    14b2:	da 01       	movw	r26, r20
    14b4:	c9 01       	movw	r24, r18
    14b6:	8f 77       	andi	r24, 0x7F	; 127
    14b8:	90 70       	andi	r25, 0x00	; 0
    14ba:	a0 70       	andi	r26, 0x00	; 0
    14bc:	b0 70       	andi	r27, 0x00	; 0
    14be:	80 34       	cpi	r24, 0x40	; 64
    14c0:	91 05       	cpc	r25, r1
    14c2:	a1 05       	cpc	r26, r1
    14c4:	b1 05       	cpc	r27, r1
    14c6:	39 f4       	brne	.+14     	; 0x14d6 <__pack_f+0xee>
    14c8:	27 ff       	sbrs	r18, 7
    14ca:	09 c0       	rjmp	.+18     	; 0x14de <__pack_f+0xf6>
    14cc:	20 5c       	subi	r18, 0xC0	; 192
    14ce:	3f 4f       	sbci	r19, 0xFF	; 255
    14d0:	4f 4f       	sbci	r20, 0xFF	; 255
    14d2:	5f 4f       	sbci	r21, 0xFF	; 255
    14d4:	04 c0       	rjmp	.+8      	; 0x14de <__pack_f+0xf6>
    14d6:	21 5c       	subi	r18, 0xC1	; 193
    14d8:	3f 4f       	sbci	r19, 0xFF	; 255
    14da:	4f 4f       	sbci	r20, 0xFF	; 255
    14dc:	5f 4f       	sbci	r21, 0xFF	; 255
    14de:	e0 e0       	ldi	r30, 0x00	; 0
    14e0:	f0 e0       	ldi	r31, 0x00	; 0
    14e2:	20 30       	cpi	r18, 0x00	; 0
    14e4:	a0 e0       	ldi	r26, 0x00	; 0
    14e6:	3a 07       	cpc	r19, r26
    14e8:	a0 e0       	ldi	r26, 0x00	; 0
    14ea:	4a 07       	cpc	r20, r26
    14ec:	a0 e4       	ldi	r26, 0x40	; 64
    14ee:	5a 07       	cpc	r21, r26
    14f0:	10 f0       	brcs	.+4      	; 0x14f6 <__pack_f+0x10e>
    14f2:	e1 e0       	ldi	r30, 0x01	; 1
    14f4:	f0 e0       	ldi	r31, 0x00	; 0
    14f6:	79 01       	movw	r14, r18
    14f8:	8a 01       	movw	r16, r20
    14fa:	27 c0       	rjmp	.+78     	; 0x154a <__pack_f+0x162>
    14fc:	60 38       	cpi	r22, 0x80	; 128
    14fe:	71 05       	cpc	r23, r1
    1500:	64 f5       	brge	.+88     	; 0x155a <__pack_f+0x172>
    1502:	fb 01       	movw	r30, r22
    1504:	e1 58       	subi	r30, 0x81	; 129
    1506:	ff 4f       	sbci	r31, 0xFF	; 255
    1508:	d8 01       	movw	r26, r16
    150a:	c7 01       	movw	r24, r14
    150c:	8f 77       	andi	r24, 0x7F	; 127
    150e:	90 70       	andi	r25, 0x00	; 0
    1510:	a0 70       	andi	r26, 0x00	; 0
    1512:	b0 70       	andi	r27, 0x00	; 0
    1514:	80 34       	cpi	r24, 0x40	; 64
    1516:	91 05       	cpc	r25, r1
    1518:	a1 05       	cpc	r26, r1
    151a:	b1 05       	cpc	r27, r1
    151c:	39 f4       	brne	.+14     	; 0x152c <__pack_f+0x144>
    151e:	e7 fe       	sbrs	r14, 7
    1520:	0d c0       	rjmp	.+26     	; 0x153c <__pack_f+0x154>
    1522:	80 e4       	ldi	r24, 0x40	; 64
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	a0 e0       	ldi	r26, 0x00	; 0
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	04 c0       	rjmp	.+8      	; 0x1534 <__pack_f+0x14c>
    152c:	8f e3       	ldi	r24, 0x3F	; 63
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	a0 e0       	ldi	r26, 0x00	; 0
    1532:	b0 e0       	ldi	r27, 0x00	; 0
    1534:	e8 0e       	add	r14, r24
    1536:	f9 1e       	adc	r15, r25
    1538:	0a 1f       	adc	r16, r26
    153a:	1b 1f       	adc	r17, r27
    153c:	17 ff       	sbrs	r17, 7
    153e:	05 c0       	rjmp	.+10     	; 0x154a <__pack_f+0x162>
    1540:	16 95       	lsr	r17
    1542:	07 95       	ror	r16
    1544:	f7 94       	ror	r15
    1546:	e7 94       	ror	r14
    1548:	31 96       	adiw	r30, 0x01	; 1
    154a:	87 e0       	ldi	r24, 0x07	; 7
    154c:	16 95       	lsr	r17
    154e:	07 95       	ror	r16
    1550:	f7 94       	ror	r15
    1552:	e7 94       	ror	r14
    1554:	8a 95       	dec	r24
    1556:	d1 f7       	brne	.-12     	; 0x154c <__pack_f+0x164>
    1558:	05 c0       	rjmp	.+10     	; 0x1564 <__pack_f+0x17c>
    155a:	ee 24       	eor	r14, r14
    155c:	ff 24       	eor	r15, r15
    155e:	87 01       	movw	r16, r14
    1560:	ef ef       	ldi	r30, 0xFF	; 255
    1562:	f0 e0       	ldi	r31, 0x00	; 0
    1564:	6e 2f       	mov	r22, r30
    1566:	67 95       	ror	r22
    1568:	66 27       	eor	r22, r22
    156a:	67 95       	ror	r22
    156c:	90 2f       	mov	r25, r16
    156e:	9f 77       	andi	r25, 0x7F	; 127
    1570:	d7 94       	ror	r13
    1572:	dd 24       	eor	r13, r13
    1574:	d7 94       	ror	r13
    1576:	8e 2f       	mov	r24, r30
    1578:	86 95       	lsr	r24
    157a:	49 2f       	mov	r20, r25
    157c:	46 2b       	or	r20, r22
    157e:	58 2f       	mov	r21, r24
    1580:	5d 29       	or	r21, r13
    1582:	b7 01       	movw	r22, r14
    1584:	ca 01       	movw	r24, r20
    1586:	1f 91       	pop	r17
    1588:	0f 91       	pop	r16
    158a:	ff 90       	pop	r15
    158c:	ef 90       	pop	r14
    158e:	df 90       	pop	r13
    1590:	08 95       	ret

00001592 <__unpack_f>:
    1592:	fc 01       	movw	r30, r24
    1594:	db 01       	movw	r26, r22
    1596:	40 81       	ld	r20, Z
    1598:	51 81       	ldd	r21, Z+1	; 0x01
    159a:	22 81       	ldd	r18, Z+2	; 0x02
    159c:	62 2f       	mov	r22, r18
    159e:	6f 77       	andi	r22, 0x7F	; 127
    15a0:	70 e0       	ldi	r23, 0x00	; 0
    15a2:	22 1f       	adc	r18, r18
    15a4:	22 27       	eor	r18, r18
    15a6:	22 1f       	adc	r18, r18
    15a8:	93 81       	ldd	r25, Z+3	; 0x03
    15aa:	89 2f       	mov	r24, r25
    15ac:	88 0f       	add	r24, r24
    15ae:	82 2b       	or	r24, r18
    15b0:	28 2f       	mov	r18, r24
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	99 1f       	adc	r25, r25
    15b6:	99 27       	eor	r25, r25
    15b8:	99 1f       	adc	r25, r25
    15ba:	11 96       	adiw	r26, 0x01	; 1
    15bc:	9c 93       	st	X, r25
    15be:	11 97       	sbiw	r26, 0x01	; 1
    15c0:	21 15       	cp	r18, r1
    15c2:	31 05       	cpc	r19, r1
    15c4:	a9 f5       	brne	.+106    	; 0x1630 <__unpack_f+0x9e>
    15c6:	41 15       	cp	r20, r1
    15c8:	51 05       	cpc	r21, r1
    15ca:	61 05       	cpc	r22, r1
    15cc:	71 05       	cpc	r23, r1
    15ce:	11 f4       	brne	.+4      	; 0x15d4 <__unpack_f+0x42>
    15d0:	82 e0       	ldi	r24, 0x02	; 2
    15d2:	37 c0       	rjmp	.+110    	; 0x1642 <__unpack_f+0xb0>
    15d4:	82 e8       	ldi	r24, 0x82	; 130
    15d6:	9f ef       	ldi	r25, 0xFF	; 255
    15d8:	13 96       	adiw	r26, 0x03	; 3
    15da:	9c 93       	st	X, r25
    15dc:	8e 93       	st	-X, r24
    15de:	12 97       	sbiw	r26, 0x02	; 2
    15e0:	9a 01       	movw	r18, r20
    15e2:	ab 01       	movw	r20, r22
    15e4:	67 e0       	ldi	r22, 0x07	; 7
    15e6:	22 0f       	add	r18, r18
    15e8:	33 1f       	adc	r19, r19
    15ea:	44 1f       	adc	r20, r20
    15ec:	55 1f       	adc	r21, r21
    15ee:	6a 95       	dec	r22
    15f0:	d1 f7       	brne	.-12     	; 0x15e6 <__unpack_f+0x54>
    15f2:	83 e0       	ldi	r24, 0x03	; 3
    15f4:	8c 93       	st	X, r24
    15f6:	0d c0       	rjmp	.+26     	; 0x1612 <__unpack_f+0x80>
    15f8:	22 0f       	add	r18, r18
    15fa:	33 1f       	adc	r19, r19
    15fc:	44 1f       	adc	r20, r20
    15fe:	55 1f       	adc	r21, r21
    1600:	12 96       	adiw	r26, 0x02	; 2
    1602:	8d 91       	ld	r24, X+
    1604:	9c 91       	ld	r25, X
    1606:	13 97       	sbiw	r26, 0x03	; 3
    1608:	01 97       	sbiw	r24, 0x01	; 1
    160a:	13 96       	adiw	r26, 0x03	; 3
    160c:	9c 93       	st	X, r25
    160e:	8e 93       	st	-X, r24
    1610:	12 97       	sbiw	r26, 0x02	; 2
    1612:	20 30       	cpi	r18, 0x00	; 0
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	38 07       	cpc	r19, r24
    1618:	80 e0       	ldi	r24, 0x00	; 0
    161a:	48 07       	cpc	r20, r24
    161c:	80 e4       	ldi	r24, 0x40	; 64
    161e:	58 07       	cpc	r21, r24
    1620:	58 f3       	brcs	.-42     	; 0x15f8 <__unpack_f+0x66>
    1622:	14 96       	adiw	r26, 0x04	; 4
    1624:	2d 93       	st	X+, r18
    1626:	3d 93       	st	X+, r19
    1628:	4d 93       	st	X+, r20
    162a:	5c 93       	st	X, r21
    162c:	17 97       	sbiw	r26, 0x07	; 7
    162e:	08 95       	ret
    1630:	2f 3f       	cpi	r18, 0xFF	; 255
    1632:	31 05       	cpc	r19, r1
    1634:	79 f4       	brne	.+30     	; 0x1654 <__unpack_f+0xc2>
    1636:	41 15       	cp	r20, r1
    1638:	51 05       	cpc	r21, r1
    163a:	61 05       	cpc	r22, r1
    163c:	71 05       	cpc	r23, r1
    163e:	19 f4       	brne	.+6      	; 0x1646 <__unpack_f+0xb4>
    1640:	84 e0       	ldi	r24, 0x04	; 4
    1642:	8c 93       	st	X, r24
    1644:	08 95       	ret
    1646:	64 ff       	sbrs	r22, 4
    1648:	03 c0       	rjmp	.+6      	; 0x1650 <__unpack_f+0xbe>
    164a:	81 e0       	ldi	r24, 0x01	; 1
    164c:	8c 93       	st	X, r24
    164e:	12 c0       	rjmp	.+36     	; 0x1674 <__unpack_f+0xe2>
    1650:	1c 92       	st	X, r1
    1652:	10 c0       	rjmp	.+32     	; 0x1674 <__unpack_f+0xe2>
    1654:	2f 57       	subi	r18, 0x7F	; 127
    1656:	30 40       	sbci	r19, 0x00	; 0
    1658:	13 96       	adiw	r26, 0x03	; 3
    165a:	3c 93       	st	X, r19
    165c:	2e 93       	st	-X, r18
    165e:	12 97       	sbiw	r26, 0x02	; 2
    1660:	83 e0       	ldi	r24, 0x03	; 3
    1662:	8c 93       	st	X, r24
    1664:	87 e0       	ldi	r24, 0x07	; 7
    1666:	44 0f       	add	r20, r20
    1668:	55 1f       	adc	r21, r21
    166a:	66 1f       	adc	r22, r22
    166c:	77 1f       	adc	r23, r23
    166e:	8a 95       	dec	r24
    1670:	d1 f7       	brne	.-12     	; 0x1666 <__unpack_f+0xd4>
    1672:	70 64       	ori	r23, 0x40	; 64
    1674:	14 96       	adiw	r26, 0x04	; 4
    1676:	4d 93       	st	X+, r20
    1678:	5d 93       	st	X+, r21
    167a:	6d 93       	st	X+, r22
    167c:	7c 93       	st	X, r23
    167e:	17 97       	sbiw	r26, 0x07	; 7
    1680:	08 95       	ret

00001682 <__fpcmp_parts_f>:
    1682:	1f 93       	push	r17
    1684:	dc 01       	movw	r26, r24
    1686:	fb 01       	movw	r30, r22
    1688:	9c 91       	ld	r25, X
    168a:	92 30       	cpi	r25, 0x02	; 2
    168c:	08 f4       	brcc	.+2      	; 0x1690 <__fpcmp_parts_f+0xe>
    168e:	47 c0       	rjmp	.+142    	; 0x171e <__fpcmp_parts_f+0x9c>
    1690:	80 81       	ld	r24, Z
    1692:	82 30       	cpi	r24, 0x02	; 2
    1694:	08 f4       	brcc	.+2      	; 0x1698 <__fpcmp_parts_f+0x16>
    1696:	43 c0       	rjmp	.+134    	; 0x171e <__fpcmp_parts_f+0x9c>
    1698:	94 30       	cpi	r25, 0x04	; 4
    169a:	51 f4       	brne	.+20     	; 0x16b0 <__fpcmp_parts_f+0x2e>
    169c:	11 96       	adiw	r26, 0x01	; 1
    169e:	1c 91       	ld	r17, X
    16a0:	84 30       	cpi	r24, 0x04	; 4
    16a2:	99 f5       	brne	.+102    	; 0x170a <__fpcmp_parts_f+0x88>
    16a4:	81 81       	ldd	r24, Z+1	; 0x01
    16a6:	68 2f       	mov	r22, r24
    16a8:	70 e0       	ldi	r23, 0x00	; 0
    16aa:	61 1b       	sub	r22, r17
    16ac:	71 09       	sbc	r23, r1
    16ae:	3f c0       	rjmp	.+126    	; 0x172e <__fpcmp_parts_f+0xac>
    16b0:	84 30       	cpi	r24, 0x04	; 4
    16b2:	21 f0       	breq	.+8      	; 0x16bc <__fpcmp_parts_f+0x3a>
    16b4:	92 30       	cpi	r25, 0x02	; 2
    16b6:	31 f4       	brne	.+12     	; 0x16c4 <__fpcmp_parts_f+0x42>
    16b8:	82 30       	cpi	r24, 0x02	; 2
    16ba:	b9 f1       	breq	.+110    	; 0x172a <__fpcmp_parts_f+0xa8>
    16bc:	81 81       	ldd	r24, Z+1	; 0x01
    16be:	88 23       	and	r24, r24
    16c0:	89 f1       	breq	.+98     	; 0x1724 <__fpcmp_parts_f+0xa2>
    16c2:	2d c0       	rjmp	.+90     	; 0x171e <__fpcmp_parts_f+0x9c>
    16c4:	11 96       	adiw	r26, 0x01	; 1
    16c6:	1c 91       	ld	r17, X
    16c8:	11 97       	sbiw	r26, 0x01	; 1
    16ca:	82 30       	cpi	r24, 0x02	; 2
    16cc:	f1 f0       	breq	.+60     	; 0x170a <__fpcmp_parts_f+0x88>
    16ce:	81 81       	ldd	r24, Z+1	; 0x01
    16d0:	18 17       	cp	r17, r24
    16d2:	d9 f4       	brne	.+54     	; 0x170a <__fpcmp_parts_f+0x88>
    16d4:	12 96       	adiw	r26, 0x02	; 2
    16d6:	2d 91       	ld	r18, X+
    16d8:	3c 91       	ld	r19, X
    16da:	13 97       	sbiw	r26, 0x03	; 3
    16dc:	82 81       	ldd	r24, Z+2	; 0x02
    16de:	93 81       	ldd	r25, Z+3	; 0x03
    16e0:	82 17       	cp	r24, r18
    16e2:	93 07       	cpc	r25, r19
    16e4:	94 f0       	brlt	.+36     	; 0x170a <__fpcmp_parts_f+0x88>
    16e6:	28 17       	cp	r18, r24
    16e8:	39 07       	cpc	r19, r25
    16ea:	bc f0       	brlt	.+46     	; 0x171a <__fpcmp_parts_f+0x98>
    16ec:	14 96       	adiw	r26, 0x04	; 4
    16ee:	8d 91       	ld	r24, X+
    16f0:	9d 91       	ld	r25, X+
    16f2:	0d 90       	ld	r0, X+
    16f4:	bc 91       	ld	r27, X
    16f6:	a0 2d       	mov	r26, r0
    16f8:	24 81       	ldd	r18, Z+4	; 0x04
    16fa:	35 81       	ldd	r19, Z+5	; 0x05
    16fc:	46 81       	ldd	r20, Z+6	; 0x06
    16fe:	57 81       	ldd	r21, Z+7	; 0x07
    1700:	28 17       	cp	r18, r24
    1702:	39 07       	cpc	r19, r25
    1704:	4a 07       	cpc	r20, r26
    1706:	5b 07       	cpc	r21, r27
    1708:	18 f4       	brcc	.+6      	; 0x1710 <__fpcmp_parts_f+0x8e>
    170a:	11 23       	and	r17, r17
    170c:	41 f0       	breq	.+16     	; 0x171e <__fpcmp_parts_f+0x9c>
    170e:	0a c0       	rjmp	.+20     	; 0x1724 <__fpcmp_parts_f+0xa2>
    1710:	82 17       	cp	r24, r18
    1712:	93 07       	cpc	r25, r19
    1714:	a4 07       	cpc	r26, r20
    1716:	b5 07       	cpc	r27, r21
    1718:	40 f4       	brcc	.+16     	; 0x172a <__fpcmp_parts_f+0xa8>
    171a:	11 23       	and	r17, r17
    171c:	19 f0       	breq	.+6      	; 0x1724 <__fpcmp_parts_f+0xa2>
    171e:	61 e0       	ldi	r22, 0x01	; 1
    1720:	70 e0       	ldi	r23, 0x00	; 0
    1722:	05 c0       	rjmp	.+10     	; 0x172e <__fpcmp_parts_f+0xac>
    1724:	6f ef       	ldi	r22, 0xFF	; 255
    1726:	7f ef       	ldi	r23, 0xFF	; 255
    1728:	02 c0       	rjmp	.+4      	; 0x172e <__fpcmp_parts_f+0xac>
    172a:	60 e0       	ldi	r22, 0x00	; 0
    172c:	70 e0       	ldi	r23, 0x00	; 0
    172e:	cb 01       	movw	r24, r22
    1730:	1f 91       	pop	r17
    1732:	08 95       	ret

00001734 <__prologue_saves__>:
    1734:	2f 92       	push	r2
    1736:	3f 92       	push	r3
    1738:	4f 92       	push	r4
    173a:	5f 92       	push	r5
    173c:	6f 92       	push	r6
    173e:	7f 92       	push	r7
    1740:	8f 92       	push	r8
    1742:	9f 92       	push	r9
    1744:	af 92       	push	r10
    1746:	bf 92       	push	r11
    1748:	cf 92       	push	r12
    174a:	df 92       	push	r13
    174c:	ef 92       	push	r14
    174e:	ff 92       	push	r15
    1750:	0f 93       	push	r16
    1752:	1f 93       	push	r17
    1754:	cf 93       	push	r28
    1756:	df 93       	push	r29
    1758:	cd b7       	in	r28, 0x3d	; 61
    175a:	de b7       	in	r29, 0x3e	; 62
    175c:	ca 1b       	sub	r28, r26
    175e:	db 0b       	sbc	r29, r27
    1760:	0f b6       	in	r0, 0x3f	; 63
    1762:	f8 94       	cli
    1764:	de bf       	out	0x3e, r29	; 62
    1766:	0f be       	out	0x3f, r0	; 63
    1768:	cd bf       	out	0x3d, r28	; 61
    176a:	09 94       	ijmp

0000176c <__epilogue_restores__>:
    176c:	2a 88       	ldd	r2, Y+18	; 0x12
    176e:	39 88       	ldd	r3, Y+17	; 0x11
    1770:	48 88       	ldd	r4, Y+16	; 0x10
    1772:	5f 84       	ldd	r5, Y+15	; 0x0f
    1774:	6e 84       	ldd	r6, Y+14	; 0x0e
    1776:	7d 84       	ldd	r7, Y+13	; 0x0d
    1778:	8c 84       	ldd	r8, Y+12	; 0x0c
    177a:	9b 84       	ldd	r9, Y+11	; 0x0b
    177c:	aa 84       	ldd	r10, Y+10	; 0x0a
    177e:	b9 84       	ldd	r11, Y+9	; 0x09
    1780:	c8 84       	ldd	r12, Y+8	; 0x08
    1782:	df 80       	ldd	r13, Y+7	; 0x07
    1784:	ee 80       	ldd	r14, Y+6	; 0x06
    1786:	fd 80       	ldd	r15, Y+5	; 0x05
    1788:	0c 81       	ldd	r16, Y+4	; 0x04
    178a:	1b 81       	ldd	r17, Y+3	; 0x03
    178c:	aa 81       	ldd	r26, Y+2	; 0x02
    178e:	b9 81       	ldd	r27, Y+1	; 0x01
    1790:	ce 0f       	add	r28, r30
    1792:	d1 1d       	adc	r29, r1
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61
    179e:	ed 01       	movw	r28, r26
    17a0:	08 95       	ret

000017a2 <_exit>:
    17a2:	f8 94       	cli

000017a4 <__stop_program>:
    17a4:	ff cf       	rjmp	.-2      	; 0x17a4 <__stop_program>
